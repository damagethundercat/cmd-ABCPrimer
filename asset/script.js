document.addEventListener("DOMContentLoaded", function () {




  // const audioPlayer = document.getElementById('audio-player');

  const dosContent = document.getElementById("dos-content");

  let currentInput = "";
  let isTypingCompleted = false;  // 타이핑 애니메이션 완료 여부
  
  const lines = [
    "University of Seoul (R) Visual Design Department\n",
    "서울시립대학교 시각디자인 전공\n\n",
    "Experimental Typography Project: ABCPrimer\n",
    "v1.0.4-alpha\n\n",
    "Initializing Typographic System",
    "Loading Creative Assets",
    "\n시작하려면 아무 알파벳이나 입력하십시오. Press any letters to start\n",
    "C:\\Experimental_Typography\\ABCPrimer>"
  ];

  let lineIndex = 0;

  function typeLine() {
    if (lineIndex < lines.length) {
      const currentLine = lines[lineIndex];
      let charIndex = 0;

      function typeChar() {
        if (charIndex < currentLine.length) {
          dosContent.innerHTML += currentLine[charIndex];
          charIndex++;
          setTimeout(typeChar, 5);  // 타이핑 속도 조절
        } else {
          lineIndex++;

          // 특정 줄에서 점 애니메이션 실행
          if (lineIndex === 5 || lineIndex === 6) {
            typeDots();  // 점 애니메이션 실행
          } else {
            setTimeout(typeLine, 500);  // 다음 줄 타이핑
          }
        }
      }
      typeChar();
    } else {
      isTypingCompleted = true;  // 타이핑 완료 플래그 설정
      startInputMode();  // 입력 모드로 전환
    }
  }

  // 점 찍기 애니메이션 함수
  function typeDots() {
    let dotCount = 0;
    const maxDots = 3;

    function addDot() {
      if (dotCount < maxDots) {
        dosContent.innerHTML += ".";
        dotCount++;
        setTimeout(addDot, 500);
      } else {
        dosContent.innerHTML += "\n";
        setTimeout(typeLine, 500);  // 다음 줄 타이핑 시작
      }
    }

    addDot();
  }
  
  // 입력 모드로 전환하는 함수
  function startInputMode() {
    const inputWrapper = document.createElement("span");  // <span> 사용으로 라인에 추가
    inputWrapper.id = "input-wrapper";  // 입력 필드의 컨테이너
    inputWrapper.style.display = "inline";  // 인라인으로 표시

    // 마지막 줄 끝에 <span>을 추가
    dosContent.insertAdjacentElement('beforeend', inputWrapper);

    renderInput();  // 첫 번째 입력 렌더링
    document.addEventListener("keydown", handleKeyPress);  // 키 입력 이벤트 추가
}

  //   function startBlinkingCursor() {
  //     const existingCursor = document.querySelector(".blinking");
  //     if (existingCursor) {
  //         existingCursor.remove();
  //     }
  
  //     const cursor = document.createElement("span");
  //     cursor.classList.add("blinking");
  //     cursor.textContent = "_\n";
  //     dosContent.appendChild(cursor);
  
  //     document.addEventListener("keydown", handleKeyPress);
  // }

  let autoScrollEnabled = true;

  function scrollToBottom() {
    setTimeout(() => {
      dosContent.scrollTop = dosContent.scrollHeight;
    }, 0);
  }

  // dosContent에 스크롤 이벤트 리스너 추가
  dosContent.addEventListener('scroll', () => {
    const atBottom = dosContent.scrollHeight - dosContent.scrollTop === dosContent.clientHeight;
    autoScrollEnabled = atBottom;  // 사용자가 스크롤을 올리면 자동 스크롤 비활성화
  });

  

  let audio;

  function setupAudioVisualization() {
    audio = new Audio('./asset/Nosurprises.mp3');
    const audioContext = new (window.AudioContext || window.webkitAudioContext)();
    const analyser = audioContext.createAnalyser();
    const source = audioContext.createMediaElementSource(audio);
    source.connect(analyser);
    analyser.connect(audioContext.destination);
    analyser.fftSize = 64; 
    
    const bufferLength = analyser.frequencyBinCount;
    const dataArray = new Uint8Array(bufferLength);
    
    const visualizationElement = document.createElement('pre');
    visualizationElement.id = 'audio-visualization';
    dosContent.appendChild(visualizationElement);
    
    function visualize() {
        analyser.getByteFrequencyData(dataArray);
        
        let visualization = '';
        for (let i = 0; i < bufferLength / 2; i++) { 
            const barLengthL = Math.min(Math.floor(dataArray[i] / 5), 20);
            const barLengthR = Math.min(Math.floor(dataArray[bufferLength / 2 + i] / 5), 20);
            visualization += `L=[${'#'.repeat(barLengthL)}${'-'.repeat(20 - barLengthL)}] R=[${'#'.repeat(barLengthR)}${'-'.repeat(20 - barLengthR)}]\n`;
        }
        
        visualizationElement.textContent = visualization;
        if (autoScrollEnabled) {
          scrollToBottom();
        }
    }
    
    audio.play(); 
    setInterval(visualize, 30);
    scrollToBottom();
    
}

    let loadingInterval = null;

    function startLoadingAnimation() {
      const messageElement = document.getElementById("message");
      let dotCount = 0;

      loadingInterval = setInterval(() => {
        dotCount = (dotCount + 1) % 4;
        const dots = '.'.repeat(dotCount);
        messageElement.textContent = `위치 정보를 불러오는 중${dots}`;
      }, 500);
    }

    function stopLoadingAnimation() {
      if (loadingInterval !== null) {
        clearInterval(loadingInterval);
        loadingInterval = null;
      }
    }


    function whereami() {
      const locationInfo = document.createElement('div');
      locationInfo.id = 'location-info';
    
      // 초기 로딩 메시지 설정
      const messageElement = document.createElement('span');
      messageElement.id = 'message';
      messageElement.textContent = '위치 정보를 불러오는 중';
      locationInfo.appendChild(messageElement);
    
      dosContent.appendChild(locationInfo);
      startLoadingAnimation();  // 점 애니메이션 시작
    
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(
          (pos) => {
            stopLoadingAnimation();  // 로딩 애니메이션 정지
    
            // 위치 정보 로드 성공 시 로딩 메시지 제거
            if (document.getElementById('message')) {
              document.getElementById('message').remove();
            }
    
            const { latitude, longitude, accuracy } = pos.coords;
            const locationMessage = `당신은 지금 위도 ${latitude}, 경도 ${longitude}의 지점으로부터 ${accuracy}m 떨어진 곳에 위치해 있습니다.`;
    
            locationInfo.innerHTML = `<div>${locationMessage}</div>`;  // 위치 정보 출력
          },
          (err) => {
            stopLoadingAnimation();  // 로딩 애니메이션 정지
    
            // 오류 발생 시 기존 메시지 업데이트
            messageElement.textContent = `위치 정보를 가져오는 데 실패했습니다: ${err.message}`;
          },
          {
            enableHighAccuracy: false,
            maximumAge: 0,
            timeout: 15000,
          }
        );
      } else {
        stopLoadingAnimation();
        messageElement.textContent = "Geolocation 기능을 사용할 수 없습니다.";
      }
    }

    function resetGeolocation() {
      // 기존 위치 정보 제거
      const existingLocationInfo = document.getElementById('location-info');
      if (existingLocationInfo) {
        existingLocationInfo.remove();  // 기존 정보 제거
      }
    
      stopLoadingAnimation();  // 기존 로딩 애니메이션 정지
    
      // 새 위치 정보 불러오기 시작
      whereami();
    }



    let currentStream = null; // 현재 비디오 스트림 추적

    function startAsciiCamera() {
      const dosContent = document.getElementById('dos-content');
    
      // 기존 video와 canvas 요소 제거
      removeExistingElements();
    
      // 숨겨진 video 요소 생성
      const video = document.createElement('video');
      video.style.display = 'none'; // 비디오 숨기기
      video.setAttribute('autoplay', '');
      video.setAttribute('playsinline', ''); // 모바일 브라우저 호환성
      
      // 새로운 ascii-art 요소 생성
      const asciiArt = document.createElement('pre');
      asciiArt.id = 'ascii-art';
    
      dosContent.appendChild(video);
      dosContent.appendChild(asciiArt);
    
      // 비디오 스트림 요청
      navigator.mediaDevices.getUserMedia({ video: true })
        .then((stream) => {
          currentStream = stream; // 스트림 저장
          video.srcObject = stream;
          renderAscii(video, asciiArt); // 아스키 렌더링 시작
        })
        .catch((error) => {
          console.error("웹캠 접근 실패:", error);
        });
    }
    
    // 기존 요소 제거 함수
    function removeExistingElements() {
      const video = document.querySelector('video');
      const asciiArt = document.getElementById('ascii-art');
      
      if (video) video.remove(); // 기존 비디오 제거
      if (asciiArt) asciiArt.remove(); // 기존 아스키 아트 제거
    
      // 기존 스트림이 있으면 정지
      if (currentStream) {
        currentStream.getTracks().forEach(track => track.stop());
        currentStream = null;
      }
    }
    
    // 아스키 렌더링 함수
    function renderAscii(video, asciiArtElement) {
      const canvas = document.createElement('canvas');
      const ctx = canvas.getContext('2d');
      const charSet = "@%#*+=-:. "; // 밝기에 따라 매핑할 아스키 문자
    
      const width = 80; // 아스키 아트의 너비
      const height = 30; // 아스키 아트의 높이
    
      canvas.width = width;
      canvas.height = height;
    
      function drawAsciiFrame() {
        ctx.drawImage(video, 0, 0, width, height);
        const imageData = ctx.getImageData(0, 0, width, height);
        let ascii = '';
    
        // 픽셀을 순회하며 아스키 문자로 변환
        for (let i = 0; i < imageData.data.length; i += 4) {
          const brightness = (imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2]) / 3;
          const charIndex = Math.floor((brightness / 255) * (charSet.length - 1));
          ascii += charSet[charIndex];
    
          if ((i / 4 + 1) % width === 0) {
            ascii += '\n'; // 줄 바꿈 추가
          }
        }
    
        asciiArtElement.textContent = ascii;
        requestAnimationFrame(drawAsciiFrame); // 다음 프레임 요청
      }
      
      scrollToBottom();
      drawAsciiFrame(); // 렌더링 시작
    }
    


function logKeyPress(input) {
  const logContainer = document.getElementById('log-container');
  
  // 현재 시간을 한국 시간(KST)으로 설정
  const now = new Date();
  const options = {
      timeZone: 'Asia/Seoul',
      year: 'numeric',
      month: '2-digit',
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit',
      hour12: false
  };
  const timestamp = new Intl.DateTimeFormat('ko-KR', options).format(now);

  // 로그 항목 생성
  const logEntry = document.createElement('div');
  logEntry.textContent = `${timestamp} <${input}> 입력`;
  logContainer.appendChild(logEntry);

  // 스크롤이 자동으로 하단으로 이동하도록 설정
  logContainer.scrollTop = logContainer.scrollHeight;
}

// 오디오 실행 및 시각화 함수
function playAudio() {
  // 기존 오디오가 재생 중이면 정지하고 초기화
  if (currentAudio && !currentAudio.paused) {
    currentAudio.pause();
    currentAudio.currentTime = 0;
  }

  // setupAudioVisualization 내부에서 오디오가 로드 및 재생됨
  setupAudioVisualization();
}


function darkmode() {
  var element = document.body;
  element.classList.toggle("light-mode");
}

function toggleFullscreen() {
  if (!document.fullscreenElement) {
    document.documentElement.requestFullscreen(); // 전체화면으로 전환
  } else {
    if (document.exitFullscreen) {
      document.exitFullscreen(); // 전체화면 해제
    }
  }
}

// 랜덤 문자열 섞기 함수
function randomTextShuffle() {
  const originalText = "Math.random() 함수를 이용하면 랜덤하게 요소들을 섞을 수 있습니다. 이렇게."; // 섞을 원본 문자열
  const randomTextElement = document.createElement('div'); // 새 div 생성
  randomTextElement.className = 'random-text'; // 클래스 이름 부여
  randomTextElement.textContent = shuffleText(originalText); // 섞인 문자열 설정

  const originalTextElement = document.createElement('div'); // 원본 문자열을 위한 새 div 생성
  originalTextElement.textContent = `원본: ${originalText}`; // 원본 문자열 설정

  dosContent.appendChild(randomTextElement); // 랜덤 문자열을 dosContent에 추가
  dosContent.appendChild(originalTextElement); // 원본 문자열을 dosContent에 추가
}

// 문자열을 랜덤하게 섞는 함수
function shuffleText(text) {
  const charactersArray = text.split(''); // 문자열을 배열로 변환
  for (let i = charactersArray.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1)); // 무작위 인덱스
      // 요소를 교환
      [charactersArray[i], charactersArray[j]] = [charactersArray[j], charactersArray[i]];
  }
  return charactersArray.join(''); // 배열을 문자열로 변환
}

// visibility 속성을 토글하는 함수
function toggleVisibility() {
  const descriptionV = document.getElementById("description-v");
  const toggleText = document.getElementById("toggle-text");

  if (descriptionV.style.visibility === "hidden") {
      descriptionV.style.visibility = "visible"; // 텍스트를 보이게
      toggleText.textContent = "아종강하고싶다!!!!!!!!!!!"; // 표시할 텍스트
  } else {
      descriptionV.style.visibility = "hidden"; // 텍스트를 숨김
      toggleText.textContent = ""; // 텍스트를 비워둠 (optional)
  }
}

function handleAlert() {
  window.alert("w를 누르셨네요. windows.Alert 함수를 이용해 경고창을 띄웠습니다.");
}

function trackMouseX() {
  const xCoordinateElement = document.getElementById('x-coordinate');
  
  // 마우스 움직임을 감지하고 x 좌표 업데이트
  document.addEventListener('mousemove', (event) => {
    xCoordinateElement.textContent = event.clientX; // 화면 기준 X 좌표 표시
  });

  // 화면에 표시
  const xDescription = document.getElementById('description-x');
  xDescription.style.display = 'none';
}

function handleXCommand() {
  trackMouseX();
}

function trackMouseY() {
  const yCoordinateElement = document.getElementById('y-coordinate');
  
  // 마우스 움직임을 감지하고 x 좌표 업데이트
  document.addEventListener('mousemove', (event) => {
    yCoordinateElement.textContent = event.clientY; 
  });

  // 화면에 표시
  const yDescription = document.getElementById('description-y');
  yDescription.style.display = 'none';
}

function handleYCommand() {
  trackMouseY();
}

function startCountdown() {
  let countdownNumber = 5;
  const countdownElement = document.createElement('div');
  countdownElement.id = 'countdown';
  countdownElement.style.marginTop = '10px';
  dosContent.appendChild(countdownElement); // 카운트다운 메시지를 화면에 추가

  function updateCountdown() {
      countdownElement.textContent = `${countdownNumber}초 후에 새로고침됩니다...`;
      countdownNumber--;

      if (countdownNumber < 0) {
          location.reload(); // 페이지 새로고침
      } else {
          setTimeout(updateCountdown, 1000); // 1초마다 카운트다운 업데이트
      }
  }

  updateCountdown(); // 카운트다운 시작
}

const primerData = {
  'a': {
      Alphabet: 
          "<pre>\n⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
           "⣿⣿⣿⣿⣿⣿\n" +
           "⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
           "⣿⣿⣿⣿           ▶ 𝗡𝗼𝘄 𝗣𝗹𝗮𝘆𝗶𝗻𝗴\n" +
           "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
           "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
           "⣿⣿⣿⣿⣿⣿⣿\n" +
           "⣿⣿\n" +
           "⣿ </pre>",
      description: document.getElementById("description-a").innerHTML
  },
  'b': {
      Alphabet:
      "<pre>________     \n"+
      "|\\   __  \\    \n"+
      "\\ \\  \\|\\ /_   \n"+
      " \\ \\   __  \\  \n"+
      "  \\ \\  \\|\\  \\ \n"+
      "   \\ \\_______\\\n"+
      "    \\|_______|\n"+
      "              \n</pre>",
      description: document.getElementById("description-b").innerHTML
  },
  'g': {
      Alphabet:
      "<pre>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣄⣠⣀⡀⣀⣠⣤⣤⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"+
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣄⢠⣠⣼⣿⣿⣿⣟⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⠀⠀⠀⢠⣤⣦⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⢦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"+
"⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣟⣾⣿⣽⣿⣿⣅⠈⠉⠻⣿⣿⣿⣿⣿⡿⠇⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⢀⡶⠒⢉⡀⢠⣤⣶⣶⣿⣷⣆⣀⡀⠀⢲⣖⠒⠀⠀⠀⠀⠀⠀⠀\n"+
"⢀⣤⣾⣶⣦⣤⣤⣶⣿⣿⣿⣿⣿⣿⣽⡿⠻⣷⣀⠀⢻⣿⣿⣿⡿⠟⠀⠀⠀⠀⠀⠀⣤⣶⣶⣤⣀⣀⣬⣷⣦⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣦⣤⣦⣼⣀⠀\n"+
"⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠛⠓⣿⣿⠟⠁⠘⣿⡟⠁⠀⠘⠛⠁⠀⠀⢠⣾⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠏⠙⠁\n"+
"⠀⠸⠟⠋⠀⠈⠙⣿⣿⣿⣿⣿⣿⣷⣦⡄⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⣼⣆⢘⣿⣯⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡉⠉⢱⡿⠀⠀⠀⠀⠀\n"+
"⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⡿⠦⠀⠀⠀⠀⠀⠀⠀⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡉⠉⢱⡿⠀⠀⠀⠀⠀\n"+
"⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣉⣿⡿⢿⢷⣾⣾⣿⣞⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⣠⠟⠀⠀⠀⠀⠀⠀⠀⠀\n"+
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⠿⠿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣾⣿⣿⣷⣦⣶⣦⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠈⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"+
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⣿⣤⡖⠛⠶⠤⡀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠙⣿⣿⠿⢻⣿⣿⡿⠋⢩⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"+
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠧⣤⣦⣤⣄⡀⠀⠀⠀⠀⠀⠘⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠘⣧⠀⠈⣹⡻⠇⢀⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"+
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⣿⣤⣀⡀⠀⠀⠀⠀⠀⠀⠈⢽⣿⣿⣿⣿⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠹⣷⣴⣿⣷⢲⣦⣤⡀⢀⡀⠀⠀⠀⠀⠀⠀\n"+
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⠟⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣷⢀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠂⠛⣆⣤⡜⣟⠋⠙⠂⠀⠀⠀⠀⠀\n"+
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⣿⣿⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⠉⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣾⣿⣿⣿⣿⣆⠀⠰⠄⠀⠉⠀⠀\n"+
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⠿⠿⣿⣿⣿⠇⠀⠀⢀⠀⠀⠀\n"+
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⡿⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢻⡇⠀⠀⢀⣼⠿⠇⠀\n"+
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠃⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠁⠀⠀⠀\n"+
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠒⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</pre>",
      description: document.getElementById("description-g").innerHTML
  },
  'c': {
    Alphabet:
    "webcam",
    description: document.getElementById("description-c").innerHTML
  },
  'd': {
    Alphabet:
    `<pre>${`⣿⣿⣿⡏⠉⠉⠉⠉⠛⠛⠛⠉⠉⠉⣉⡉⠙⠛⠿⣤⣼⣧⡀⠀⠈⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⡄⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠁⣀⠘⠦⠙⣿⣶⣤⣄⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠋⠀⢸⠁⠑⢦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠁⠒⠤⣈⡑⠦⣝⣤⣀⣀⣈⣉⠛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⡆⡀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢆⠀⠀⠀⠉⠓⢢⣽⣲⣌⠙⠻⢿⣶⣮⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⢸⠀⢱⠀⠀⠀⠈⠳⣄⠀⠀⠀⠀⠀⠑⠠⡀⠀⢀⡀⠵⢄⠀⠀⠀⠈⠳⢌⠙⠳⢤⡀⠙⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠈⠀⠀⣇⠀⠀⠀⡀⠀⠙⢶⣤⣀⡀⠀⠀⢈⠷⣏⡀⠀⠀⠑⢄⡀⠀⠀⠀⠙⠢⡀⠈⠳⣄⠘⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠛⢙
⠀⠀⠀⠀⣿⡀⠀⠀⠑⢤⡀⠀⠳⡀⠈⠉⣲⠿⠥⣙⣯⠓⢦⣀⠀⠙⣶⣄⡠⣀⡀⠈⠢⡀⠈⢳⣌⣿⣿⣿⣿⣿⢏⣿⡿⣿⠋⢀⣴⣿
⠀⠀⠀⢠⡟⢳⠀⠀⠀⠈⠻⣷⣄⡘⣦⠺⠃⠀⠻⠃⠀⠀⠀⢿⡳⣄⡈⢻⡙⢶⣭⣶⣤⣌⣦⠀⠙⣿⣹⣿⡿⠁⠞⠁⡀⠁⢠⠞⢹⣿
⠀⠀⠠⢼⣅⣀⣑⣄⡀⢄⡀⠈⠻⣍⠻⣶⣶⣶⢶⣶⠂⠐⠚⠁⠀⠙⢿⠒⢷⡄⠙⢦⡈⠻⢯⣳⣄⠈⠛⠯⣀⣤⠴⠋⢀⣴⣃⡠⠌⠛
⠀⠂⠀⢸⡴⠛⣉⠀⠈⠙⢿⡋⣷⣟⠓⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⡀⢹⣦⠀⠙⢦⣄⡉⠛⢷⣦⣀⠀⣉⠿⠚⠛⠉⠁⠀⠀⠀
⡀⠀⠀⣼⠁⠀⠃⢀⣠⣶⡿⠁⠘⠋⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⡄⣿⣷⣤⣀⠉⠻⠗⣂⡤⠞⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀크아아아아아악
⣧⠀⠀⣿⣀⠀⡴⠋⠘⠉⠀⠀⠀⠀⢀⡠⠴⠚⠉⠛⢦⡀⠀⠀⠀⠀⠀⠀⣿⣿⣿⢀⡀⠙⠋⠙⢯⡁⠀⢀⡴⠃⠀⠀⠀⠀⠀⠀⠀⠀      내 눈
⠁⢣⠀⢸⠛⠋⠀⠀⠀⠀⢀⣤⠴⠚⠁⢀⣤⣶⣷⣾⣿⣿⣆⠀⠀⠀⠀⠀⡟⠁⡿⠁⠀⠀⠀⠀⢀⠙⠶⣅⠀⠀⠀⠀⢀⣀⣀⣀⠀⢠
⠀⢻⡳⡈⡇⠀⠀⠀⠀⠀⢸⠀⢀⣴⣾⣿⣿⠿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀⣧⣴⢧⣄⠀⠀⡠⠞⠁⠀⠀⠈⢦⠀⠀⣴⣵⢿⣿⡇⢠⣿
⠀⠀⢷⣌⠻⡀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣷⣴⣿⣿⣿⣿⣿⣿⣇⠀⠀⠀⣿⣿⠀⠙⢷⣌⠳⣄⠀⠀⠀⠀⠀⢣⠈⣿⣷⣿⣿⣣⣿⣿
⡀⠀⠘⣏⠳⡽⣆⠀⠀⠀⠈⣿⡿⢿⣼⣿⣿⣿⣿⣿⣿⡿⠻⣿⣿⠀⠀⢸⣿⣿⣀⠀⠈⡟⠳⢬⡻⣦⡀⠀⣠⣼⣤⣻⠿⠟⣡⣿⣿⣿
⣧⡀⠀⢹⡳⣿⣆⠁⠀⠀⠀⠸⣿⣯⣿⣿⠿⠿⠿⠟⠋⠀⠀⡿⢽⠀⢀⣿⣿⣿⣿⢧⣰⠁⠄⠀⠙⣮⡙⠉⠉⠁⢻⡀⣀⣼⣿⣿⣿⣿
⣿⣷⣆⠀⢳⠹⣟⠳⣀⠀⠀⠀⠙⢿⣿⣷⡀⠀⠀⠀⠀⠀⣼⢥⠇⠀⣼⣿⣿⣿⠇⠚⠉⠚⣧⣴⣿⣿⣿⣷⣄⠀⠀⢻⣿⣿⣿⣿⣿⣿
⣿⣿⣿⠳⣌⢧⠌⠓⢬⣷⢤⣀⠀⠀⠙⠯⣉⠳⠶⠶⠶⠎⠁⠀⠀⣼⣿⣿⣽⣥⣶⣥⣶⣿⣿⣿⣿⠟⠋⠀⠈⢳⣄⠀⢻⣿⣿⣿⣿⣿
⣿⣿⡟⢧⠈⢻⡀⠀⠀⠀⠀⢸⣿⣶⣤⣀⠈⠉⠒⠂⠀⠀⠀⢀⣾⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠁⠀⠀⠀⠀⠀⠙⣆⠈⢿⣿⣿⣿⣿
⣿⣿⣿⣾⣷⣄⠹⣄⠀⠀⢀⡴⣿⣿⣿⣿⣿⣷⣶⣶⣤⡤⠴⠟⠋⢹⣾⣿⣿⣿⣿⣿⣿⠟⠁⠀⠀⠎⠉⠉⠲⣄⠀⠈⢧⣸⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⣼⡼⠁⠈⠙⠻⣿⣿⣿⣿⣿⣿⣦⡀⠀⣸⣿⣿⣿⣿⣿⠟⠁⠀⠀⠀⠸⠀⠀⠀⠀⠈⠳⣄⠀⢿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣮⢹⢃⡤⠒⠒⢦⡀⠉⠛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⢹⣼⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠀⠀⠀⠀⠙⢦⠀⠀⠈⠙⠻⢿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠀⣠⠋⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠑⣄⠀⠀⠀⠀⠈⠙⢻⡟⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡀⠀⠀⠀⠀⠀⠈⠓⠄⠀⠀⠀⠀⣼⠟⣦⣀⢠⡋⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿`}</pre>`,
    description: document.getElementById("description-d").innerHTML
  },
  'e': {
    Alphabet:
    `<pre>${`⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⢀⠀⣀⣀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣄⢴⣰⢦⣄⣿⣶⣿⣿⣷⣔⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣐⣾⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⣴⣾⡭⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡔⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⡉⠶⡈⡉⢿⠷⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣺⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⡀⢂⠰⡀⢀⡙⢮⣝⣪⣂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⣿⣿⣄⢗⢂⠉⣠⣍⣩⡐⡌⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣾⣷⡟⢋⠄⠠⢀⡾⢛⣽⣿⣿⣿⣷⣶⠂⠐⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣟⣷⣿⠡⠈⠀⢤⠏⣼⣿⣿⣿⠟⠉⠛⠥⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣟⣿⣌⡆⠁⠉⠀⠬⡉⠭⠛⢛⡤⠀⠀⠈⠓⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣻⣿⣿⣿⣿⣿⣿⢿⣧⡄⡉⠻⣿⣇⢀⠀⡀⢀⠀⠀⡀⢥⢋⡱⢳⠠⢂⣤⣼⡣⠀⣀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠾⣿⣿⣿⣿⣿⡩⡤⣷⢋⣇⠀⠠⢿⡮⠇⡘⠤⢊⠔⣩⢖⠫⡜⠹⠘⠛⣛⡿⡀⠘⡄⠠⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡽⣿⣿⣿⣿⣿⢮⣢⠌⢤⡾⢑⢊⠱⠀⠂⠠⢈⠎⡵⣉⠎⣐⠃⣌⣞⣵⣶⡖⠀⡏⠐⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠽⣿⣿⣿⣿⣎⠻⣿⢿⡶⡉⢆⢂⠡⣈⠄⡡⠚⠤⡁⠎⠀⣢⢟⣯⣯⣻⡅⣦⣢⠄⣼⠀⠀⢀⠤⢄⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢝⣿⣿⣿⠧⢃⡐⠂⡄⢳⡜⣢⠑⣆⠸⢤⣉⠦⡑⡌⠲⣅⠻⣙⢛⣯⠀⣿⠀⠀⠨⣀⢔⠕⠁⣠⣕⡄⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢾⣿⣿⠉⡆⣀⠁⢰⢉⣱⣉⡾⣈⡿⣶⣏⣶⢱⡀⢇⡈⠷⣈⣶⣹⡆⢿⠁⠀⠀⡉⠀⠀⣾⣿⣿⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⢟⣋⠒⠤⢂⠡⠂⠼⡐⣼⣻⢿⣿⣿⣿⣾⣿⣿⣷⣯⣿⣿⣿⡿⠁⣿⠀⠀⢾⠁⠐⠀⢛⢉⣉⣩⡄⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡐⠀⠈⠲⣉⠔⡠⠁⠜⠰⣹⣿⣟⣮⡿⣝⡿⣋⣿⣿⣿⠿⠻⠛⠉⠀⠀⢛⡄⢀⢻⠀⠀⠀⡀⠀⠉⠛⡃⡀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠤⠀⠀⠀⠐⠂⠀⠒⠰⠀⠀⠀⠀⠘⢆⠡⠌⣀⢣⠹⣿⣞⡷⡙⢡⢒⣽⣿⣟⠁⠀⠀⠀⠀⠀⢸⣹⠁⠀⠄⠀⠀⠀⠀⠀⢀⠣⣿⠇
⠀⠀⠀⠀⠀⠀⠀⠀⠀⡐⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢄⠀⠀⠀⠀⠑⢄⣐⢪⠱⣋⢿⡅⢡⢃⢎⠹⣿⡆⠀⠀⠀⠀⠀⠀⠈⡜⡄⠀⠀⠀⠀⠀⠀⠀⠀⣸⠏⠀
⠀⠀⠀⠀⠀⠀⠀⢀⠌⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠱⣌⢣⡝⣲⡜⢢⠭⣆⢳⡟⠄⠀⠀⠀⠀⠀⠀⠀⡇⠐⠀⠀⠀⠀⠀⠀⢀⣰⡓⠀⠀
⠀⠀⠀⠀⠀⠀⢀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠂⠄⣀⠀⠀⠀⠈⠢⠀⠀⠀⠀⠈⠳⣞⡵⣫⢧⣻⣾⣿⢣⠃⠀⠀⠀⠀⠀⠀⢠⠰⢀⠀⠀⠀⠀⠀⣤⣿⡗⠁⠀⠀
⠀⠀⠀⠀⠀⡠⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠂⠄⠀⠐⢄⠀⠀⠀⠀⠈⠻⣧⣿⣿⣿⡟⡧⠑⠀⡀⠀⠀⠀⢀⠂⡁⠀⠀⠀⠀⢀⣼⣟⠃⠀⠀⠀⠀
⠀⠀⠀⠀⡐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠑⢄⠀⠀⠀⠀⠈⢻⣿⢏⡵⠁⠀⠲⡈⠂⢀⠀⡌⠠⠀⠀⠀⠀⠀⣼⡿⠌⠀⠀⠀⠀⠀
⠀⠀⠀⢠⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠠⠀⠀⠀⠑⡙⣄⠀⠀⠀⢠⣠⣾⡇⠀⠠⠀⠈⠂⠀⢸⢀⠂⠄⠂⠀⠀⣰⡟⣷⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣰⠶⣶⢤⡄⠀⠐⠙⢷⣄⢴⠛⢻⡽⠃⠀⠀⠁⠀⠰⡀⣞⠠⠐⠠⠀⠀⢠⣿⢩⡇⠀⠀⠀⠀⠀⠀
⠀⠀⠰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⢉⣿⣾⣏⣸⣶⡀⣎⠈⠎⢸⣇⠸⣾⠁⣰⢆⠀⠀⠀⢸⡏⠰⡈⠰⠀⢀⠸⣏⣾⠇⠀⠀⠀⠀⠀⠀
⠀⠀⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠼⢫⡲⢹⡿⣻⢦⢻⣄⠀⡦⠈⢿⡄⡷⣻⡝⣿⣮⠀⢀⡞⠤⡑⠤⠀⠀⣂⢽⡇⣞⠀⠀⠀⠀⠀⠀⠀
⠀⠰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢵⢈⠆⢕⣣⢎⣥⣿⠆⠀⠑⠀⢿⣸⠌⡙⠶⣹⠗⠉⠬⡑⣈⠐⠀⡁⢴⣺⢘⡏⠀⠀⠀⠀⠀⠀⠀
⠀⠇⠀⠀⠠⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠛⠓⠈⠛⠉⠁⠀⠀⠀⠀⠘⢾⡳⢌⡴⢃⠀⠌⠐⡐⠀⠀⠐⣈⠦⡛⡼⠇⠀⠀⠀⠀⠀⠀⠀
⠠⠀⠀⠀⠀⠀⠀⠀⠐⠒⠨⠤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠮⠿⢦⣌⠀⠄⠀⠀⢀⠂⡔⣫⢵⢻⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠠⠤⢀⠀⠤⢀⣈⣒⢤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠈⠳⡀⠀⢀⠂⡜⣸⢱⣾⡄⠀⠀⠀⠀⠀⠀⠀⠀`}</pre>`,
    description: document.getElementById("description-e").innerHTML
  },
  'f': {
    Alphabet:
    `<pre>${`⠀⠀⠀⡶⢶⡴⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⣧⠀⠁⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡀⣀⣀⠀⠀⠀
⠀⢠⠟⠉⣠⣄⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣯⠙⠁⣸⠇⠀⠀
⢠⡎⢀⡼⠋⠈⢋⣁⣀⣀⠀⠀⠀⠀⣀⠤⠶⠶⠶⢤⡀⢸⣇⡴⢦⡈⠙⢦⠀
⣾⠁⣾⣁⣴⡾⢛⣉⠭⠭⢽⣲⣶⣋⣁⣠⣴⣶⡶⠶⠟⠶⠶⢦⡀⠙⣦⠘⣆
⡏⠀⣿⣿⡿⠗⠉⠁⠀⣀⡠⢬⣍⣉⣛⡻⠟⢉⡤⢖⡤⣭⣍⠐⠻⣆⢸⠀⢸
⡇⠀⣿⣿⠁⠀⢀⡴⢋⡕⢫⢚⡿⢶⡄⠈⡿⠉⠁⣼⡟⣧⣽⣇⢀⡞⣾⠀⢸
⡇⠀⣿⣿⠀⠋⠱⣞⡁⠀⢹⣯⣻⣾⣿⠴⠓⠤⠤⠼⠛⠛⠉⣭⢯⡀⡟⠀⢸
⡇⠀⢸⣿⠀⡠⠶⠶⠾⠿⠾⢭⣉⣁⣤⣤⣤⡤⠤⠴⠶⠒⣉⣀⡼⢱⠇⠀⢸
⡇⠀⠸⣿⠘⠧⣀⣘⡒⠲⠶⠦⠤⠤⠤⠤⠴⠶⠶⠖⠒⢋⣉⣴⣣⠞⠀⢀⡞
⢷⠀⠀⢿⣆⡀⠀⠉⠉⠉⠑⠲⠶⠶⠶⠶⠒⠒⠛⠋⠉⢉⣉⣼⡀⢀⡴⠟⠀
⠘⣧⠀⠈⠻⣿⣷⣦⣤⣄⣀⣀⣠⣤⣤⣤⣤⣤⣤⣶⣿⣿⣿⣿⣟⠁⠀⠀⠀
⠀⢸⣷⣄⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡀⠀⠀
⠀⠚⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠋⠀⠀`}</pre>`,
    description: document.getElementById("description-f").innerHTML
  },
  'h': {
    Alphabet:
    `<pre>${`⠄⠄⢠⠄⠄⠄⠄⠄⠄⠄⠐⡀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠂⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠸⠄⠄⠄⠄⠄⠄⠄⠄⢀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⡀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠘⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠘⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⡆⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠠⢦⠶⠆⠄⠄⠄⠄⠄⠄⠈⠐⡀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⡇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢲⡏⠢⠄⠄⠄⠄⠄⠄⠄⢠⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢠⠄⡀⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⡀⠄⠄⠄⠄⠄⠄⠄⠄⢁⠄⠄⠠⠄⠠⠤⠄⢀⠄⡠⠔⠄⣈⣠⡄⣀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⠲⠁⠄⠄⠄⠄⠄⠄⠄⠄⠠⠂⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⢁⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⠁⠈⠁⠄⠊⠁⢑⠢⠬⣾⣷⣿⣿⣶⣤⡀⠄⠄⠄⠄⠄⠄⠄⡄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠃⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠁⠄⠄⠄⠄⠄⠄⠄⣀⣶⣆⠡⠄⡀⠄⠄⠄⠄⢦⠄⠉⠖⡒⠩⠍⠉⠉⢉⣁⣀⡀⠄⠄⠄⢠⠄⠄⠄⠄⠄⠄⠄⠄⠄⢰⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠁⠄⠄⠄⠄⢀⣾⣿⣿⣿⡆⠄⠄⠐⠄⠄⠄⢸⠄⠄⠄⠄⠄⠄⡀⠄⠄⠈⣿⠟⠓⠢⡈⣾⡆⠄⠄⠄⠄⠄⠄⠄⠄⢸⠄⠄⠄⠄⠄⠄⡸⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⢀⠄⠄⢠⣾⣿⠿⠛⠛⠉⠐⢄⠄⠄⠁⠠⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢀⠇⠂⠄⠠⠄⢸⣷⡄⠄⠄⠄⠄⠄⠄⠄⢸⣧⡀⠄⠄⣠⡴⠁⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠈⠄⠄⣾⡟⠁⠄⠄⠄⠄⠄⠠⠄⠄⠄⠄⠄⠄⠄⠄⢈⠄⠄⠄⠄⠄⠈⠐⠂⡀⠄⠄⠄⢻⣷⣄⠄⠄⠄⠄⠄⢀⣿⣿⣷⡶⠾⠋⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⡄⢸⡟⠄⠄⠄⠄⠄⠄⠄⠄⠄⠐⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⢷⠻⠄⠄⠄⠄⠄⠹⣿⣧⠄⠄⠐⠁⣸⣿⠗⢶⣶⣒⡀⠄⡀⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⢠⣾⡇⠄⠄⠄⠄⠄⠄⠠⠈⠁⢀⡀⠁⡀⠄⠄⠄⠄⠄⠄⣀⣀⡀⡠⠄⠄⠄⠄⠄⠄⠄⠄⠹⢿⣧⡀⠄⣰⣿⡏⠪⣺⣿⣿⣿⣷⡀⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⢨⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠊⠄⢀⢰⢎⣄⠄⠈⠁⢀⠄⠂⠁⠂⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⢿⣿⠞⠛⠛⠉⣌⡀⠄⠈⠙⠻⣿⡄⠂⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠸⡟⠄⠄⠄⠄⠂⠄⠄⠄⠄⢀⠔⠄⠘⠅⠊⠄⠄⠂⠄⠄⠄⠄⠄⠄⠄⠄⠄⠁⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢠⣾⣿⣿⣦⡀⠄⠄⠙⢧⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⢀⠆⠄⠄⠄⠄⠄⠄⠠⡀⠄⠄⠄⠄⠂⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣏⠍⠛⢿⣿⣷⡀⠄⠄⠘⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠘⠄⡀⠄⠄⠄⠄⠄⠄⠄⠄⠄⡀⠄⠄⠐⠄⠄⠄⠄⠄⠄⠄⠈⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣸⣿⡏⠄⠄⠻⣿⡇⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⡄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⠈⢿⣿⠄⠄⠄⢹⡇⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠃⠄⠄⢠⡿⠿⠄⠠⠄⠄⠄⠂⠄⣶⡦⢸⣷⠄⢸⣷⠄⠄⠄⠄⠄⠄⢀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠸⡿⠄⠄⠄⠘⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠰⠄⢄⢸⣧⡀⠄⠂⠄⠄⠄⠄⠄⠟⠁⣼⡏⠄⣼⠇⠄⠄⠄⠄⢰⠄⠄⠑⠄⠄⠄⠔⠄⠄⢀⠄⠄⠠⠃⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⡈⠘⡞⠛⠃⠄⡀⠄⠄⠄⢀⣸⠄⢠⣿⠁⢠⣿⠄⠄⠄⠄⠄⠨⠄⠄⠄⠄⠄⠘⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢀⠇⠄⠄⠁⠠⠄⠄⠄⢲⡿⠄⣼⡟⢁⣼⡇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢸⠄⡼⠄⠄⠆⠄⠄⠄⠄⠄⣿⠃⠄⠄⠄⢸⣿⡇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠠⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⡆⠁⠄⠄⠄⠄⠄⠄⠁⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢀⠈⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄
`}</pre>`,
    description: document.getElementById("description-h").innerHTML
  },
  'i': {
    Alphabet:
    `<pre>${`⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠤⢔⣶⣒⠒⠒⠒⠠⠄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⢊⡡⠔⣶⡿⠛⠛⠁⠉⠉⠐⠢⣤⣭⡲⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣀⣀⣀⡀⠀⠀⠀⠀⠀⢀⠔⢡⠖⠁⠀⠘⠁⠀⡀⠀⠀⠀⠀⠀⠀⠛⠛⢷⡀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠠⠊⢎⠀⠀⠙⢦⡀⠀⠀⡰⠃⡐⠁⠀⠀⠀⢠⣮⠴⠒⠿⣄⠀⠀⠀⡠⠤⢤⡀⠓⡄⠀⠣⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠱⠀⡰⠁⢰⠁⠀⠄⡀⠀⣶⠃⣠⡤⡄⠙⡄⠀⣼⠞⠉⠙⠻⣇⠸⡄⠀⠑⡀⠀⠀⣠⠚⠛⠛⡗⢄⠀⠀⠀
⠀⠀⠀⠈⠆⠀⠀⠀⠀⠀⢀⢠⠃⠀⠀⠁⠀⠀⠤⣁⣸⢸⣧⣿⢹⠀⣷⠀⣿⣞⣿⣧⠀⠘⡆⠀⠀⠀⢳⠀⡞⡁⠀⠀⠐⠁⠈⡆⠀⠀
⠀⠀⠀⠀⠘⣀⠀⠄⡤⠤⣾⣼⡀⠀⠀⠀⠀⠐⠂⠒⠌⠹⣿⡷⠋⢠⡟⠀⠈⣿⣯⡽⠁⢀⡇⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⡘⠀⠀⠀
⠀⠀⢠⡴⠋⠀⠀⠀⠀⠀⠀⠈⠙⠳⣄⠀⠀⠊⠉⠱⡒⠄⠪⠱⠶⠋⠀⠀⠀⠈⠣⣤⡴⠞⠁⠂⠀⠀⢀⣇⣧⣤⣄⠀⢀⡸⠀⠀⠀⠀
⠀⣰⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠤⠜⡆⠀⠀⠀⠀⠘⣦⣀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠨⣻⠭⠀⣠⠞⠋⠁⠀⠀⠀⠀⠀⠩⡲⣄⠀⠀
⢰⠁⠀⠀⠲⣀⡠⠔⠂⠀⠀⠐⠒⠲⢖⣇⠀⠀⠀⠀⠀⢹⣧⡉⠐⠒⠤⠤⠤⢤⣤⠖⠊⠁⠀⢰⠓⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢪⢧⠀
⠀⠀⠀⠀⠀⢱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣇⠀⠀⠀⠀⠀⢿⣿⣶⣤⣄⣀⣤⣾⠇⠀⠀⠀⢀⣼⠞⠛⠉⠉⠉⠑⠒⠠⢄⠔⠀⠀⠀⠇
⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣬⠀⠀⠀⠀⠀⠀⢢⠙⡟⢿⣿⣿⡿⠀⠀⠀⠀⠸⡅⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀
⠘⡆⠀⠀⠀⠀⠀⢲⠊⠁⠀⠀⠈⠑⢳⢮⡀⠑⢠⡀⠀⠀⠀⠀⠙⠳⠤⠿⠛⠁⠀⠀⠀⠀⠘⣄⣀⢤⠤⠤⠤⣀⠀⡀⠀⠀⠀⠀⠀⡀
⠀⠘⢆⠀⠀⠀⠀⠐⠀⠀⠀⠀⠀⠀⠀⡜⠻⡦⡀⠉⠢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠙⠏⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⡰⠁
⠀⠀⠀⠑⠄⣀⠀⠀⠀⠀⠀⠀⣀⠠⠊⠀⠀⠈⠙⠳⢦⣄⠀⠀⠀⠀⠀⠀⠀⣀⡀⠔⠊⠁⠀⠐⢄⠀⠀⠀⠀⠀⠈⠀⠀⠀⢀⠜⠀⠀
⠀⠀⠀⠀⠀⠀⠉⠀⠀⠀⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠁⠀⠀⠀⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⠑⠢⡤⠀⠀⠀⠠⡴⠊⠁⠀⠀⠀`}</pre>`,
    description: document.getElementById("description-i").innerHTML
  },
  'j': {
    Alphabet:
    `<pre>${`⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡤⠔⠒⠚⠉⠓⠒⢤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠀⣠⡄
⢀⣤⡀⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠉⠀⠀⠀⠀⠀⠀⠀⠀⠈⠓⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣯⣴⣿⠃
⠀⠹⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠃⠀⠀⠀⠀⢀⣄⣀⠀⠀⠀⠀⠀⠈⢳⡀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣛⣿⠇⠀
⠀⠀⠈⠳⣯⣿⡄⠀⠀⠀⠀⠀⠀⠀⢠⡇⠀⠀⠀⠀⣼⣿⣤⣴⣽⣦⡀⠀⠀⠀⠈⣇⠀⠀⠀⠀⠀⠀⢀⣶⣿⣿⠋⠀⠀⠀
⠀⠀⠀⠀⢸⣿⣽⣆⠀⠀⠀⠀⠀⠀⢸⡁⠀JA⢀⣿⣿⣿⣿⣅⢹⣧⠀VA⠀⣿⠀⠀⠀⠀⠀⠀⣼⡿⣿⣿⡀⠀⠀⠀
⠀⠀⠀⠀⢸⣿⡟⢈⠳⡀⠀⠀⠀⠀⠘⡇⠀⠀⠀⢸⣿⣿⣿⣷⣮⣾⣿⣇⠀⠀⢀⡏⠀⠀⠀⠀⠀⣼⣿⣷⣹⣿⡏⠀⠀⠀
⠀⠀⠀⠀⣾⢻⣇⣸⢰⣸⢄⡀⠀⠀⠀⠹⡄⠀⠀⣼⣿⣿⣿⣿⡿⢸⣿⡿⣄⢀⡾⠁⠀⣀⣀⣴⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀
⠀⠀⠀⠀⢻⣿⣟⡋⣾⣿⣮⣿⣶⡤⣄⣀⣹⢦⣼⠿⠟⣿⠿⡟⢷⡊⠙⠿⡛⢻⡿⣖⣺⣿⣿⣿⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀
⠀⠀⠀⠀⠈⠻⣿⣷⣿⣿⣿⣿⣿⣿⡖⠂⣰⣼⣶⡄⠀⣧⠀⠳⣸⠃⢀⠀⣽⡘⡿⣾⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣼⣿⣿⡇⣷⣀⣾⣠⣴⣥⣤⣀⡿⠋⣧⣃⣿⣿⣿⣿⣿⣿⣿⠟⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⢿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⠋⢩⣏⢻⠻⣿⣟⣿⣿⢸⣿⣿⣿⣿⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠿⣿⣿⣿⣿⡿⢟⣇⡏⠀⣾⢸⠘⡇⠉⢿⣿⣿⣧⣿⣿⡟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⣿⣷⢸⣿⢹⠀⣿⢸⠀⠓⡆⠸⣿⡏⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣋⣿⢻⣾⢸⠈⠀⣿⢸⡀⠀⢻⠀⡿⣿⣿⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣆⣿⣿⣇⠀⣿⢾⡇⠀⣸⠀⢇⣿⣾⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⣿⣿⡏⣿⣀⣿⡿⣿⡸⣿⠃⢸⢿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⡇⠀⢸⣿⡏⣿⣧⡀⢀⣸⢸⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡏⣿⣿⣿⣇⣿⣿⡀⠈⣿⣷⢸⣿⣿⠘⣿⣾⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢹⣷⣿⣿⣿⣷⢹⣿⣧⠀⣿⣿⡇⣿⣿⡆⣿⡇⣿⢹⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⣿⣿⣿⡀⠻⠿⠆⣿⣿⣿⡈⢻⡇⠛⡇⠿⠿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠿⠿⠃⠀⠀⠀⠸⢿⣿⠇⠈⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀`}</pre>`,
    description: document.getElementById("description-j").innerHTML
  },
  'k': {
    Alphabet:
    "Keyframe을 활용해 스프라이트 이미지를 이동시켜 영상처럼 보이게 만들 수 있습니다!",
    description: document.getElementById("description-k").innerHTML
  },
  'l': {
    Alphabet:
    `<pre>${`⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣤⣴⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣦⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠿⠿⣿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠛⠋⢻⣇⠀⠀⠸⣇⠀⠀⢰⡏⠀⣸⠇⠀⢀⡿⠀⢹⡏⢹⡟⠻⣿⣿⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⣯⡁⠹⣧⣀⣤⣿⣦⢴⣶⣿⣶⣶⣿⠥⠤⠿⠦⠤⢼⣧⣀⣿⣀⣼⠃⢰⡏⠈⣿⢿⡆⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠉⢷⡄⠘⣷⣶⠿⠽⠒⠚⠉⠉⠀⠀⠀⠀⠉⠙⠒⠒⠒⠒⠒⠒⠒⢼⠉⠙⠓⢿⣄⣰⡿⢸⣷⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⡛⠉⠻⣆⣀⣿⠟⠉⠀⠀⠀⠀⣀⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⡀⠀⠀⠈⠻⢷⡾⣿⡇⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡿⣯⡈⠻⢶⣤⠾⠋⠁⠀⠀⠴⠚⠉⠉⠁⠀⠀⠀⠀⢩⡀⠀⠀⠀⠀⠀⠀⠐⡋⠀⠀⠀⠉⠳⣄⠀⠀⠘⣷⣿⡇⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⠻⣦⡈⢻⣴⠟⠁⠀⠀⠀⠀⠀⠀⣤⠤⠤⠴⠖⠀⠀⠀⠀⠹⡆⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⣀⣀⠀⠀⠀⠀⣿⣾⠁⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡋⠙⢦⣌⣻⡿⠁⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠀⠀⠀⠀⠈⠉⠓⠦⠄⣸⠇⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⠉⠻⣦⡀⢹⡟⠀⠀⣀⠀⠀⠀⠀⠼⠿⠗⠸⣯⡉⣿⣿⣿⣿⠟⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⠶⢶⣤⣤⣤⠀⢀⡐⣿⠀⠀⠀⠀⠀⠀⠀⡀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⠙⣧⡀⠉⣻⡟⠁⠀⠀⢱⣧⣤⠀⠀⠀⠀⠀⢰⠾⠿⡿⠿⠿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠰⣟⢶⣾⣿⣿⣿⠀⠻⣤⣿⡀⠀⠀⠀⠀⠀⢰⠃⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣆⠈⠻⣦⡟⠀⠀⠀⠀⢘⣷⢿⠄⠀⠀⠀⠀⠘⠓⠲⠿⣿⣿⣷⡿⠃⠀⠀⠀⠀⠀⠀⠀⣷⠀⠙⠿⣷⣾⣿⣏⣤⠀⠀⢸⣷⠀⠀⠀⠀⠀⣸⠁⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣆⠀⢸⡇⠀⠀⠀⠀⢰⣿⣬⡳⣃⡄⠀⠀⠀⠀⠀⠀⠈⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣆⠀⠀⠙⠃⠀⠀⠀⠀⠀⠚⣿⠀⠀⠀⠀⣠⣾⠏⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢷⣼⠇⠀⠀⠀⠀⢸⡇⢬⠱⢸⣘⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣦⡀⠀⠀⠀⢀⡈⢀⠰⣝⣿⠀⠀⢰⣳⠋⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣙⣧⠀⠀⠀⠀⠸⣷⣃⢯⡤⡿⣅⠀⢦⡀⠀⠀⠀⠀⠀⠀⣠⡤⠶⠀⠀⠀⠀⠀⠀⠀⠈⣿⠀⠀⠀⠀⠑⢿⡟⣺⠏⠀⠀⣧⠃⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⢿⡇⠀⠀⠀⠀⢹⣗⡃⠹⢄⠙⣆⠤⠘⠀⠀⠀⠀⢠⡀⢻⣆⠀⠀⢀⣀⡀⠀⠀⠀⣾⠃⠀⠀⠰⢠⢚⣿⣿⡟⠀⠀⢹⡀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⡇⠀⠀⠀⠀⠈⢻⣇⠞⣐⣤⠩⢹⠂⠀⠲⠀⢠⡞⢁⡀⣉⠉⠁⠨⠀⢀⠤⠉⠛⠃⢾⠀⠠⠴⣳⢉⣻⡟⠀⠀⢠⣷⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡇⠀⠀⠀⠀⠀⣆⢻⣾⣣⠈⠁⡄⠒⢿⠉⢠⠏⠀⢶⠠⡴⠛⠃⢑⣽⡩⢴⣬⣅⣀⠸⡆⠈⢼⢺⣼⠏⠀⠀⠀⢨⡿⡇⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⣿⡇⠀⠀⠀⠀⠀⢸⠈⡛⢻⣶⣄⡼⡚⢤⠁⠛⠀⠀⠾⠳⠦⢤⣄⣀⣀⣀⣀⣤⣯⣽⡳⢿⡀⢖⣻⠋⠀⠀⠀⠀⢀⡇⣧⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⣴⣾⣿⠁⠀⠀⠀⠀⠀⣿⠨⠀⠀⠘⠻⣿⣾⡌⠓⣧⡄⠀⠀⡀⠀⠀⠰⢦⠶⡦⠤⠾⢭⠳⢿⡲⣔⣶⣿⠀⠀⠀⠀⠀⣸⣣⡟⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣀⣠⣶⣾⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⣘⡋⣀⢃⡡⠙⠦⠰⠙⣿⣄⡌⠩⠁⣄⠐⠢⡌⠖⢀⢀⡤⠄⡠⣀⢰⠤⢹⣷⣽⡫⣄⠀⣠⢔⣫⠴⠋⠀⠀⠀⠀⠀⠀
⠀⠀⠀⣰⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠸⣍⣒⡉⠊⣩⠦⠓⢀⠘⠹⣿⣧⡁⡶⠀⠀⠹⠀⡴⠂⠀⠋⢰⠒⠘⣤⣼⡋⠀⠉⠲⡿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⣠⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠀⠀⣀⣤⡶⠉⣂⠒⠁⠀⢈⡂⢄⠀⠈⠸⡻⡷⢦⣤⣸⣁⣀⣈⣄⣀⣠⣴⣾⣿⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣥⣀⠀⠀⠀⠀⣾⠋⠀⠀⠀⠀⠀⠙⠀⠱⠝⢢⠉⠙⠆⠑⠟⣇⠠⠉⠉⠈⢙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣾⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠈⠢⡄⠀⠘⠧⣄⠀⠀⠀⠙⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠀⠁⠀⠈⠀⠁⢀⣠⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣶⣶⣦⣤⣀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡶⠦⢤⣴⣖⣲⣄⣀⡀⢀⣠⠤⢤⣀⣤⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣄⢘⠳⡶⠾⠿⡿⠿⠿⡭⢉⣩⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿`}</pre>`,
    description: document.getElementById("description-l").innerHTML
  },
  'm': {
    Alphabet:
    `<pre>${`⡀⠀⠙⢿⣿⣦⣄⠀⠉⠻⣿⣷⣦⡀⠀⠙⢿⣿⣶⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢻⣿⣷⣄⠀⠀⠙⢿⣿⣦
⣷⣄⠀⠀⠙⢿⣿⣷⣀⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠘⠿⣿⣷⣄⠀⠀⠙⢿
⠻⣿⣷⣄⠀⠀⠙⢿⣿⣷⡄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠈⠿⣿⣷⣄⠀⠀
⠀⠈⠻⣿⣿⣆⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠀⠻⣿⣿⣦⡀⠀⠈⢻⣿⣷⣄
⣧⡀⠀⠈⠻⣿⣷⣦⠀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠹⣿⣿⣦⡀⠀⠈⠻⣿
⢿⣿⣦⡀⠀⠈⠻⣿⣿⣦⠀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠹⢿⣿⣦⡀⠀⠉
⠀⠙⢿⣿⣷⡄⠀⠈⠻⣿⣿⣤⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠙⣿⣿⣦⡀
⣆⠀⠀⠙⢿⣿⣦⡄⠀⠈⠻⣿⣷⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢻⣿⣷⣄⠀⠈⠙⢿⣿
⣿⣷⣄⠀⠀⠙⢿⣿⣦⣄⠀⠈⠻⣿⣷⣆⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢻⣿⣷⣄⠀⠈⠻
⠈⠻⣿⣷⣦⡀⠀⠙⢿⣿⣦⣀⠀⠈⠻⣿⣿⣆⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠘⠿⣿⣷⣄⠀
⡄⠀⠈⠻⣿⣷⣄⡀⠀⠙⢿⣿⣧⣀⠀⠈⠻⣿⣿⣆⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠘⠿⣿⣷
⣿⣦⡀⠀⠈⠻⣿⣷⣄⠀⠀⠙⢿⣿⣧⣀⠀⠈⠻⣿⣿⣦⠀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠘⢿
⠙⢿⣿⣦⡄⠀⠈⠻⣿⣿⣄⠀⠀⠙⢿⣿⣶⣀⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠀⠻⣿⣿⣦⡀⠀
⠀⠀⠙⢿⣿⣧⡀⠀⠈⠻⣿⣿⣤⠀⠀⠙⢿⣿⣶⡄⠀⠈⠻⣿⣷⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠀⠻⣿⣿⣦
⣷⣄⠀⠀⠙⢿⣿⣶⡀⠀⠈⠻⣿⣷⣦⠀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⠀⠀⠛⣿
⠻⣿⣷⣄⡀⠀⠙⣿⣿⣶⣄⠀⠈⠻⣿⣷⣦⡀⠀⠙⢿⣿⣶⣄⠀⠈⠻⣿⣿⣦⡀⠀⠙⢿⣿⣷⣄⡀⠈⠻⣿⣿⣦⣀⠀⠙⢿⣿⣷⣄⡀⠈⠻⣿⣿⣦⣀⠀⠙⢻⣿⣷⣄⠀⠈`}</pre>`,
    description: document.getElementById("description-m").innerHTML
  },
  'n': {
    Alphabet:
    `<pre>${`⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⣶⣶⣿⣿⣷⣶⣦⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣠⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣶⠿⠟⠋⠉⠁⠀⠀⠀⠀⠉⠙⠻⣷⣦⣄⢀⣀⣤⣶⡾⠿⠿⠟⠛⠛⠻⠿⣷⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⡿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⡛⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡿⠋⠀⠀⠀⠀⢀⣠⣶⣶⣶⣶⣶⣶⣶⣶⣦⣤⣀⠀⢻⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⡟⠁⠀⠀⢠⣴⣿⠟⠛⠉⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⢿⣶⣿⣧⣤⣤⣶⣶⣿⣿⡿⢿⣿⣿⣶⣶⣴⣿⣆⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⡿⠁⠀⠀⠀⠘⠋⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣤⣤⣴⣶⣶⣶⣿⣿⣧⣀⠀⠀⠀⢀⣤⣤⣤⣤⣴⣦⣼⣿⣿⣿⣿⣷⣤⣀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣶⡿⠿⣛⣩⣭⣿⣿⣿⣿⣭⣭⣙⣿⣷⡄⠀⠈⠻⣏⣉⣹⣽⣿⣿⣭⣿⣯⣭⣉⣙⢻⣷⡄⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⡿⠟⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⣾⠿⣟⣩⣷⣶⠿⠟⠋⠉⠉⠁⠀⠉⢉⣉⣉⣛⣿⣿⣶⠾⠿⠿⠛⢛⣉⣍⣭⣉⣍⣉⣉⣛⣻⢿⣿⣇⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⣿⣭⣶⡿⠟⠋⠉⠀⠀⢀⣀⣤⣴⣶⣿⣾⣿⠿⠟⠛⠿⣿⣿⣤⣤⣶⣶⡿⠿⢿⣿⣿⣿⣿⣟⠛⠻⠿⢿⣿⣷⡀⠀
⠀⠀⠀⠀⠀⠀⢀⣾⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣷⣬⣿⣥⣤⣤⣤⣤⣶⣿⠿⣿⣿⠛⢿⣿⣿⣿⣦⡀⠀⠀⣸⡿⠛⠉⠁⠀⠀⣠⣿⣇⣀⡿⠿⣿⣷⡄⠀⠀⢸⣿⡇⠀
⠀⠀⠀⠀⠀⢀⣾⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⣻⣿⣿⣯⣅⡀⠀⢠⣿⣿⠖⢾⣿⡀⣨⣿⣧⣤⣼⣿⣧⣤⣀⣀⠀⢀⣿⣿⡛⣿⣧⣀⣿⣿⣧⣤⣶⣿⠏⠀⠐
⠀⠀⠀⠀⣰⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣶⣭⣟⡿⠿⣿⣿⣿⣿⡿⡿⣿⢿⣿⣿⣯⣽⡿⠉⠙⠛⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠟⣿⣿⠿⠃⠀⠀⠀
⠀⠀⠀⣰⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠿⠿⠾⠿⠿⠾⠿⠿⣿⣿⣿⡿⠋⠉⠁⣤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣾⡿⠃⠀⠀⠀⠀⠀
⠀⢀⣼⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣴⣾⠿⠋⠁⠀⠀⠀⠀⠻⠿⢿⣶⣶⣶⣶⣶⣶⠾⣿⣿⡋⠉⠀⠀⠀⠀⠀⠀⠀
⠀⣼⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⠿⠛⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣦⠀⠀⠀⠈⠻⣷⣄⠀⠀⠀⠀⠀⠀⠀
⢸⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠙⢿⣦⠀⠀⠀⠀⠀⠀
⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣆⠀⠀⠀⠀⠀
⠘⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣶⣿⠿⠿⠿⠿⠿⠿⠿⢿⣷⣶⣦⣤⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣠⣤⣶⣿⠿⠿⢿⣧⠀⠀⠀⠀
⠀⢹⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⡏⠉⠀⣤⣤⣤⣤⣤⣄⣀⣀⣀⠉⠉⠉⠛⠛⠿⠿⠿⠶⠶⠶⠶⠶⠶⠾⠿⠿⠿⠟⠛⠛⠉⠉⠁⠀⠀⢀⣼⡿⠀⠀⠀⠀
⠀⠈⢿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠘⣿⣇⠀⠀⠹⠉⠉⠉⡉⠙⠛⠻⠿⢿⣶⣶⣶⣶⣤⣤⣄⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣤⣤⣴⣶⣶⡿⠟⠁⠀⠀⠀⠀
⠀⠀⠈⢿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠘⢿⣷⣤⣶⣶⡿⠿⠿⢿⣿⣶⣦⣤⣤⣤⣈⣉⠙⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠉⠉⢈⣿⠆⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠈⠻⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣦⣤⣤⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠛⠛⠛⠿⠿⢿⣿⣷⣶⣶⣶⣤⣤⣤⣤⣤⣤⣤⣤⣤⣶⡿⠛⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠈⠻⣿⣷⣤⣄⣀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣩⣽⡿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠙⠿⢿⣿⣿⣿⣶⣶⣤⣄⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣠⣶⣾⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠛⠿⢿⣿⣯⣟⣻⣿⠿⠷⠶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⡶⣶⣿⣿⡿⠟⠛⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠻⠿⢷⣶⣶⣶⣶⣶⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣴⣶⣶⡿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠉⠛⠛⠛⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀`}</pre>`,
    description: document.getElementById("description-n").innerHTML
  },
  'o': {
    Alphabet:
    `<pre>${`⠀⠀⠀⠀⠀⢀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⣴⠾⠛⠋⠛⠻⢶⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢸⡏⠀⠀⠀⠀⠀⠈⢻⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢸⣇⠀⠀⣤⣶⣧⠀⢼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠻⣦⣀⠘⣿⣿⣧⡀⠀⠀⠀⡀⠀⢀⣠⣦⠀⢰⣾⣿⡄⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠉⠂⠘⢿⣿⣷⠀⢲⣿⣿⣄⠘⢿⣿⣧⣀⣿⣿⣿⣆⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⣧⠀⢻⣿⣿⣆⣬⣿⣿⣿⣿⣿⣿⣿⣆⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⣧⣤⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣄⣀⣀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠿⢿⣿⣿⣿⡿⠟⠋⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀`}</pre>`,
    description: document.getElementById("description-o").innerHTML
  },
  'p': {
    Alphabet:
    `<pre>${``}</pre>`,
    description: document.getElementById("description-p").innerHTML
  },
  'q': {
    Alphabet:
    `<pre>${`⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⣾⣾⣶⣶⣶⣶⣿⣿⣿⣿⣿⣷⣮⣄⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣤⣤⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠛⠋⠛⢿⣿⣿⣿⣿⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠿⠛⠉⠁⠈⠉⠉⠉⠉⠋⠋⠉⠉⠀⠀⠀⠀⠀⠙⣿⣿⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⣿⡉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢘⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢴⣿⣿⣿⠂⠀⠀⣀⣤⣄⣄⣄⣀⣀⠀⠀⡀⢀⣴⣶⣶⣾⣿⣿⣽⣿⣿⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣨⣿⣿⣿⡄⠀⢺⣿⣿⣿⣿⣿⣿⣿⠟⠨⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠟⠃⠙⢛⡇⠀⣿⡿⠛⠻⢿⣻⠿⠟⠀⠀⠈⣿⡿⠛⣛⣻⢿⣿⣿⣿⡿⣿⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠂⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⣿⣾⡗⠤⣄⠠⠦⠆⢢⣿⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⡇⠀⠀⠂⠀⣠⣼⣿⣿⣿⡟⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣷⡀⠀⠀⠀⠀⢠⡞⣀⣠⣤⣤⣾⣯⣷⣆⡀⢺⣴⣿⣿⣿⣿⣿⣶⠍⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⢿⣿⡇⣠⠄⢰⠟⠀⠉⠛⣿⢿⣿⣿⡗⠻⣿⣿⣿⣿⣿⣿⡏⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⠖⠋⣀⣀⣀⣀⡀⣨⣟⣫⣼⣷⣼⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⣤⣠⣀⣀⣀⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣟⣿⣽⣿⢀⡿⠡⢄⣀⣀⣉⣩⣽⣽⣿⣿⣿⣿⣿⣿⣿⣿⣟⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⡭⣻⡶⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣿⣿⣿⣿⣶⣶⡝⠛⢛⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠃⠀⠀⠀⠀⠠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢇⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣃⣨⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠛⢻⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡄⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⡿⠏⠀⠀⣸⣿⣄⠀⠀⠀⠀⢸⣿⣿⣿⠛⠉⠉⠉⠙⠛⠛⠃⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⠀⠈⠹⢿⣿⣿⣿⣿⣿⡿⠟⠋⠀⠀⠀⠀⠀⢰⣿⣿⣿⣷⣀⠀⠀⢸⣿⣿⣿⣄⣠⣀⣄⣤⣀⡀⠀⢀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⡏⠀⠀⣀⣀⠀⠀⠈⢉⣀⣀⣽⣿⣿⣷⣶⣤⣴⣿⣿⣿⣿⣿⣿⣷⡆⠀⠀⠀⠀⠀⠀⠈⠁⠉⠙⢿⣿⣿⣇⣀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣾⣿⣿⣿⣧⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⢱⣤⣶⣷⣶⣶⣶⣶⠀⣦⣦⡄⠈⠙⣿⣤⠁⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣶⣿⣿⣿⣿⣿⣿⡿⠿⣿⣿⡓⡜⣿⣿⣿⣟⣿⣯⢿⡌⢌⣹⣼⣿⣷⣽⣿⣿⣿⣿⣇⣀⡈⠀⠈⠉⠉⠉⠛⠻⣿⣿⣶⡄⠀⠀⠉⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣀⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⣸⣗⡼⢞⣿⣿⣿⣿⣿⣿⣿⣷⠿⠫⣍⣼⣿⣿⣿⣿⣿⣿⡏⠈⢿⣿⣷⣦⣄⣀⣤⣀⠀⠉⠻⢿⣧⣄⣀⠀⠀⠀⠀⠀
⢀⣀⣀⣤⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢰⣿⣯⣶⣾⣿⣿⣿⣿⠿⠛⠛⠛⠛⠉⢻⣿⣿⣿⣿⣿⣿⣿⣷⣄⡀⠈⠉⠻⣯⣉⣽⣿⣿⣶⣄⡀⠉⠚⢻⣶⣦⣀⣀⡀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠈⠉⠛⠟⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣴⣶⣧⢈⠟⠿⠿⠿⢿⠷⣰⣀⣠⣿⡿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⡤⣂⣄⣀⣴⣿⣿⡿⢷⣂⢹⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⡙⡁⠀⣰⠇⢸⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣭⣷⠓⠊⠀⢠⣾⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡝⣛⣏⠁⡠⠀⣰⣿⣿⣿⣿`}</pre>`,
    description: document.getElementById("description-q").innerHTML
  },
  'r': {
    Alphabet:
    `<pre>${`⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⣶⡋⠉⠙⠒⢤⡀⠀⠀⠀⠀⠀⢠⠖⠉⠉⠙⠢⡄⠀
⠀⠀⠀⠀⠀⠀⢀⣼⣟⡒⠒⠀⠀⠀⠀⠀⠙⣆⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠹⡄
⠀⠀⠀⠀⠀⠀⣼⠷⠖⠀⠀⠀⠀⠀⠀⠀⠀⠘⡆⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⢷
⠀⠀⠀⠀⠀⠀⣷⡒⠀⠀⢐⣒⣒⡒⠀⣐⣒⣒⣧⠀⠀⡇⠀⢠⢤⢠⡠⠀⠀⢸
⠀⠀⠀⠀⠀⢰⣛⣟⣂⠀⠘⠤⠬⠃⠰⠑⠥⠊⣿⠀⢴⠃⠀⠘⠚⠘⠑⠐⠀⢸
⠀⠀⠀⠀⠀⢸⣿⡿⠤⠀⠀⠀⠀⠀⢀⡆⠀⠀⣿⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⣸
⠀⠀⠀⠀⠀⠈⠿⣯⡭⠀⠀⠀⠀⢀⣀⠀⠀⠀⡟⠀⠀⢸⠀⠀⠀⠀⠀⠀⢠⠏
⠀⠀⠀⠀⠀⠀⠀⠈⢯⡥⠄⠀⠀⠀⠀⠀⠀⡼⠁⠀⠀⠀⠳⢄⣀⣀⣀⡴⠃⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢱⡦⣄⣀⣀⣀⣠⠞⠁⠀⠀⠀⠀⠀⠀⠈⠉⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣤⣾⠛⠃⠀⠀⠀⢹⠳⡶⣤⡤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣠⢴⣿⣿⣿⡟⡷⢄⣀⣀⣀⡼⠳⡹⣿⣷⠞⣳⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢰⡯⠭⠹⡟⠿⠧⠷⣄⣀⣟⠛⣦⠔⠋⠛⠛⠋⠙⡆⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢸⣿⠭⠉⠀⢠⣤⠀⠀⠀⠘⡷⣵⢻⠀⠀⠀⠀⣼⠀⣇⠀⠀⠀⠀⠀⠀⠀
⠀⠀⡇⣿⠍⠁⠀⢸⣗⠂⠀⠀⠀⣧⣿⣼⠀⠀⠀⠀⣯⠀⢸⠀⠀⠀⠀⠀⠀⠀`}</pre>`,
    description: document.getElementById("description-r").innerHTML
  },
  's': {
    Alphabet:
    `<pre>${`⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⣶⣶⣿⣿⣷⣶⣦⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣠⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣶⠿⠟⠋⠉⠁⠀⠀⠀⠀⠉⠙⠻⣷⣦⣄⢀⣀⣤⣶⡾⠿⠿⠟⠛⠛⠻⠿⣷⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⡿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⡛⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡿⠋⠀⠀⠀⠀⢀⣠⣶⣶⣶⣶⣶⣶⣶⣶⣦⣤⣀⠀⢻⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⡟⠁⠀⠀⢠⣴⣿⠟⠛⠉⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⢿⣶⣿⣧⣤⣤⣶⣶⣿⣿⡿⢿⣿⣿⣶⣶⣴⣿⣆⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⡿⠁⠀⠀⠀⠘⠋⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣤⣤⣴⣶⣶⣶⣿⣿⣧⣀⠀⠀⠀⢀⣤⣤⣤⣤⣴⣦⣼⣿⣿⣿⣿⣷⣤⣀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣶⡿⠿⣛⣩⣭⣿⣿⣿⣿⣭⣭⣙⣿⣷⡄⠀⠈⠻⣏⣉⣹⣽⣿⣿⣭⣿⣯⣭⣉⣙⢻⣷⡄⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⡿⠟⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⣾⠿⣟⣩⣷⣶⠿⠟⠋⠉⠉⠁⠀⠉⢉⣉⣉⣛⣿⣿⣶⠾⠿⠿⠛⢛⣉⣍⣭⣉⣍⣉⣉⣛⣻⢿⣿⣇⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⣿⣭⣶⡿⠟⠋⠉⠀⠀⢀⣀⣤⣴⣶⣿⣾⣿⠿⠟⠛⠿⣿⣿⣤⣤⣶⣶⡿⠿⢿⣿⣿⣿⣿⣟⠛⠻⠿⢿⣿⣷⡀⠀
⠀⠀⠀⠀⠀⠀⢀⣾⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣷⣬⣿⣥⣤⣤⣤⣤⣶⣿⠿⣿⣿⠛⢿⣿⣿⣿⣦⡀⠀⠀⣸⡿⠛⠉⠁⠀⠀⣠⣿⣇⣀⡿⠿⣿⣷⡄⠀⠀⢸⣿⡇⠀
⠀⠀⠀⠀⠀⢀⣾⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⣻⣿⣿⣯⣅⡀⠀⢠⣿⣿⠖⢾⣿⡀⣨⣿⣧⣤⣼⣿⣧⣤⣀⣀⠀⢀⣿⣿⡛⣿⣧⣀⣿⣿⣧⣤⣶⣿⠏⠀⠐
⠀⠀⠀⠀⣰⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣶⣭⣟⡿⠿⣿⣿⣿⣿⡿⡿⣿⢿⣿⣿⣯⣽⡿⠉⠙⠛⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠟⣿⣿⠿⠃⠀⠀⠀
⠀⠀⠀⣰⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠿⠿⠾⠿⠿⠾⠿⠿⣿⣿⣿⡿⠋⠉⠁⣤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣾⡿⠃⠀⠀⠀⠀⠀
⠀⢀⣼⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣴⣾⠿⠋⠁⠀⠀⠀⠀⠻⠿⢿⣶⣶⣶⣶⣶⣶⠾⣿⣿⡋⠉⠀⠀⠀⠀⠀⠀⠀
⠀⣼⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⠿⠛⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣦⠀⠀⠀⠈⠻⣷⣄⠀⠀⠀⠀⠀⠀⠀
⢸⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠙⢿⣦⠀⠀⠀⠀⠀⠀
⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣆⠀⠀⠀⠀⠀
⠘⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣶⣿⠿⠿⠿⠿⠿⠿⠿⢿⣷⣶⣦⣤⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣠⣤⣶⣿⠿⠿⢿⣧⠀⠀⠀⠀
⠀⢹⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⡏⠉⠀⣤⣤⣤⣤⣤⣄⣀⣀⣀⠉⠉⠉⠛⠛⠿⠿⠿⠶⠶⠶⠶⠶⠶⠾⠿⠿⠿⠟⠛⠛⠉⠉⠁⠀⠀⢀⣼⡿⠀⠀⠀⠀
⠀⠈⢿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠘⣿⣇⠀⠀⠹⠉⠉⠉⡉⠙⠛⠻⠿⢿⣶⣶⣶⣶⣤⣤⣄⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣤⣤⣴⣶⣶⡿⠟⠁⠀⠀⠀⠀
⠀⠀⠈⢿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠘⢿⣷⣤⣶⣶⡿⠿⠿⢿⣿⣶⣦⣤⣤⣤⣈⣉⠙⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠉⠉⢈⣿⠆⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠈⠻⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣦⣤⣤⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠛⠛⠛⠿⠿⢿⣿⣷⣶⣶⣶⣤⣤⣤⣤⣤⣤⣤⣤⣤⣶⡿⠛⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠈⠻⣿⣷⣤⣄⣀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣩⣽⡿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠙⠿⢿⣿⣿⣿⣶⣶⣤⣄⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣠⣶⣾⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠛⠿⢿⣿⣯⣟⣻⣿⠿⠷⠶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⡶⣶⣿⣿⡿⠟⠛⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠻⠿⢷⣶⣶⣶⣶⣶⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣴⣶⣶⡿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠉⠛⠛⠛⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀`}</pre>`,
    description: document.getElementById("description-s").innerHTML
  },
  't': {
    Alphabet:
    `<pre>${`⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣀⣠⠤⣖⣾⣭⡍⠉⠹⣿⣗⣦⢤⣀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⣠⠶⢶⣶⣿⡿⠋⠉⠀⠀⠀⠀⠀⠀⠀⠙⣿⣿⣾⣕⡦⣄⡀⠀⠀⠀⠀
⠀⠈⣧⣧⣉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⢹⣿⡿⣿⣿⣷⣯⣳⡀⠀⠀
⠀⠀⠘⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠿⠃⠀⣿⡆⠀⢹⣿⣿⠛⣷⡀⠀
⠀⠀⡴⠉⠻⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠆⠀⣿⣇⣸⣿⠟⠁⠀⠉⣧⠀
⠀⠀⣷⠂⠀⠘⣮⠙⠛⠒⠒⠛⠀⠀⢠⡏⠀⢰⣿⣿⣿⠏⠀⠀⠀⠂⢸⠀
⠀⠰⡏⠀⠀⢰⣿⣷⣤⣄⢀⣀⣤⡜⠋⢀⣠⣿⣿⣿⡟⠀⠀⠀⠀⠀⢸⠀
⠀⢸⣇⡀⠀⠈⠛⢿⣿⣿⣷⣶⠯⢭⣿⣿⣿⣿⣿⣿⡀⠀⠀⠀⠀⠀⢸⡄
⠀⢺⣉⡍⢹⡆⠀⠀⠀⠉⠀⠈⠀⠀⠻⠛⠟⠛⠛⠋⣁⠀⠀⠀⠀⠀⣈⣿
⠀⡟⠂⠀⢸⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⠶⠤⠀⠐⠀⢸⡟
⢀⣧⡀⠀⠀⢹⣷⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠓⠀⠀⠀⠀⢸⡇
⣼⣃⡀⠀⠀⠻⠻⢿⣿⣷⣤⣤⣤⣄⣀⠀⣀⣀⣀⣴⡆⠀⠀⠀⠀⠀⢸⣇
⣿⢀⠁⠀⢠⡆⠀⠀⠙⠻⢿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠃⠀⠀⠀⠀⠀⠀⡏
⢻⡜⠳⢶⣼⣿⣦⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡄⠀⠀⠀⠀⠀⠀⡇
⢸⣿⡀⠀⠀⣿⣿⣿⣿⣿⢗⡶⢤⣤⣀⣀⣀⣀⣀⣀⡁⠀⠀⠀⠀⠀⠀⣿
⠸⣏⢇⠀⠀⣿⣿⣿⣿⣿⠀⠉⠉⠉⠛⠾⣿⣿⣿⣿⣷⣤⣤⣤⡴⠤⢤⣿
⠀⠘⢮⣁⣰⣿⣿⣿⡟⣿⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡏⠀⠀⠀⠀⠀⠀⣿
⠀⠀⠀⠀⣸⣻⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠸⡿⣿⡟⠁⣰⠇⠀⠀⠀⡀⣿
⠀⠀⠀⡰⣻⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠹⡽⣿⡿⠋⢀⡄⠴⣚⡵⠛
⠀⠀⣾⣿⣿⣿⣿⣿⣾⠀⠀⠀⠀⠀⠀⠀⠀⣠⣿⣿⣿⣿⣿⠖⠋⠉⠀⠀
⠀⠀⠹⡽⣿⣿⣿⢏⠟⠀⠀⠀⠀⠀⠀⣠⢞⣽⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀
⠀⠀⠀⠈⠛⠉⠛⠉⠀⠀⠀⠀⠀⠀⢸⣱⣿⣿⣿⣿⣿⡿⡿⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠫⣿⡿⠿⠿⠽⠋⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀`}</pre>`,
    description: document.getElementById("description-t").innerHTML
  },
  'u': {
    Alphabet:
    `<pre>${`⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠟⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢷⡄⠈⡓⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⠤⠂⢹
⠈⡷⡄⠈⠲⢤⣈⠻⠉⠛⠉⠉⠁⠒⠖⠉⠉⠉⠒⠶⢦⣤⠴⠒⢉⣡⠴⠀⢀⠏
⠀⢸⡿⡂⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣴⡞⠉⠀⢀⣠⡞⠀
⠀⠀⢙⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀⢠⡼⡟⠀⠀
⠀⠀⡼⠋⠀⣤⣀⠀⠀⠀⠀⠀⠈⠐⣂⣄⠀⠀⠀⠀⠀⠀⠀⢀⠀⣰⡟⠁⠀⠀
⠀⢠⡇⠀⠀⠘⠛⠃⠀⠀⠀⠀⠾⣿⠿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⢻⠀⠀⠀⠀
⠀⢸⡇⢺⡀⠀⢠⡒⠠⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⡀⠀⠀⠸⡇⠀⠀⠀
⠀⢸⡇⣘⠑⡀⠀⠙⢏⣁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠂⠀⣔⣇⠀⠀⠀
⠀⢸⡇⡁⠀⢳⣶⣾⣷⣦⣄⣀⡀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀
⠀⠸⡇⠁⠀⠀⢏⠉⠀⠀⠙⠛⠛⠛⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢈⡏⠀⠀⠀
⠀⠀⠯⣀⣈⣀⣈⣐⣲⣄⣄⣤⣴⣆⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣈⣛⡧⠀⠀⠀`}</pre>`,
    description: document.getElementById("description-u").innerHTML
  },
  'v': {
    Alphabet:
    `<pre>${`⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⠁⣠⣶⠞⠁⠀⠀⠀⠀⠀⠈⠑⠒⠤⡀⠀⠀⣀⡠⠔⠒⠉⠉⠉⠙⠛⠿⣶⡄⠀⠀⠀⠈⣷⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠘⠀⡴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠓⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣆⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⡞⠁⠀⠀⠀⠀⣀⠤⠒⠃⠉⠉⠉⠑⠓⠶⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣧⡀⢀⣯⣀⣀⣀⣀⠀⠀
⠀⠀⠀⠀⠀⢀⠀⣰⡞⠀⠀⠀⠀⠊⠉⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⠀⠉⢷⠀⠉⠈⠉⠉⠉⠉⠉⠉⠉⠉⠀⠛⠿⣿⣯⣹⣿⢯⡉⠳⣄
⠀⢀⣤⠄⠀⣩⣾⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡴⠾⠛⠉⠉⠉⠛⠻⢶⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣽⡄⢻⡄⠉
⣰⠟⠀⢀⣴⠟⣻⠃⠀⠀⠀⠀⠀⠀⠀⣠⠴⢟⣉⠴⣲⣿⣿⣿⣯⣭⣖⣲⣮⣝⠶⡄⠀⠀⢀⡠⠔⠒⠈⢉⣉⠤⣤⣤⣾⣿⣿⣶⢷⣤
⠁⠀⢠⡾⠋⠀⡿⠀⠀⠀⠀⠀⠀⣀⣤⠴⢾⣫⠵⠟⠉⠁⠀⠀⠀⠀⠉⠙⠛⠿⢷⣞⡒⠉⡁⠠⠒⢒⣉⣵⠶⠟⠛⠉⠀⠈⠉⠙⡆⠁
⠀⣠⡟⠁⠀⠀⠁⠀⠀⠀⠀⠘⠿⠤⢴⣶⡿⠁⠀⠀⠀⠀⠀⠀⠀⣾⣿⡆⠀⠀⢀⣈⣿⣶⡶⠶⠚⠉⠉⠀⠀⠀⠀⢰⣿⣷⠀⢀⡇⠀
⢰⡟⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢉⡻⠷⣦⣄⣀⣀⣀⣀⣀⣈⣿⣵⠶⠟⠛⠿⣯⣥⣤⣤⣤⣤⣤⣤⣤⣤⣤⣼⣿⣶⣿⣿⠁⠀
⡿⠀⢀⣼⣁⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠲⠦⣤⣭⣍⣉⣉⣉⣉⣀⣀⢠⡶⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣰⡿⠟⠋⠁⠀⠀
⣟⣦⠞⠋⠉⠀⠀⠀⠀⠀⠀⠀⢀⣀⣠⣤⣤⣤⣀⡀⠀⠀⠀⠀⠀⠀⡤⠂⡉⠐⠂⠀⠀⠐⠠⠤⣤⡤⠤⠴⠒⠺⣿⣻⡀⠀⠀⠀⠀⠀
⡟⠁⠀⠀⠀⠀⠀⠀⠀⣀⣴⡾⠛⠋⠉⣉⣉⣉⡉⠛⠛⠒⠶⠦⠴⢯⣴⣧⣤⣤⣄⣀⣀⣀⣀⢀⣀⣀⣠⣤⣤⡶⣿⣿⡇⠀⠀⠀⠀⠀
⠄⠀⠀⠀⠀⠀⠀⣠⣾⡿⠋⣠⣤⣶⣿⣿⣿⣿⣿⣿⣿⣶⣦⣤⣀⣀⠀⠀⠀⠉⠉⠛⠙⢛⢻⣿⣿⡿⢻⣏⣁⣤⣿⡿⠃⡀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢰⣿⠋⢡⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣶⣶⡾⠟⠛⠛⠛⠛⠛⠛⠛⠋⢁⣀⣀⣀⡀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣿⠏⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⠀⠀⠀⠀⠀⠀⠀⣀⣤⣶⣿⠿⠛⠻⠿⣦⡀⠀
⣤⣾⣻⡗⠀⢸⣿⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢛⣿⣭⣭⣭⣿⣟⣛⠿⢷⣶⣤⣤⣤⣤⣤⣴⣾⣿⣿⣿⣿⠿⠷⣤⡀⢈⡷⠀
⡏⠉⠉⠁⠀⢸⡟⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⣴⣿⣿⣿⣿⣿⣿⣿⠿⠿⢷⣦⣬⣭⣩⣏⣽⣿⣿⡿⣿⡁⠀⠀⠀⠈⠉⠉⠀⠀
⣿⠀⠀⠀⠀⢸⣿⡀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⠇⣼⣿⣿⣿⣿⣿⣿⣿⡟⠀⠀⠀⠀⠉⠉⠛⠛⠋⠉⠀⠰⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢻⣧⡀⠀⠀⡸⣿⣷⡀⠈⢻⣿⣿⣿⣿⣿⣿⣿⣤⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⣀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠾⠿⣷⣄⠀⠉⠹⣿⣧⣄⣀⣈⣻⣿⣿⣿⣭⣿⣿⣭⣭⣉⣉⣹⣿⣛⣛⣛⣻⣿⣿⣿⠿⠟⠛⠛⢛⣛⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠈⠛⠿⢶⣦⣾⣟⣛⠋⠉⠉⠉⠉⠉⠉⣽⣿⠉⠉⢉⣿⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⢛⣻⣿⠿⢻⡟⠁⠀⠀⠀⠀⢠⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠈⠉⠉⠛⠛⠿⠷⣶⣦⣴⡿⢿⣿⡤⠖⡟⠁⠀⠀⠀⠀⠀⠀⢀⣀⣠⣴⡾⠋⠉⠀⢸⣿⡇⠀⠀⠀⠀⠐⢑⠀⠀⠈⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠟⠁⠀⠀⠀⠀⠾⠭⢍⣉⡉⠉⠉⠉⠉⠉⠁⠙⠻⣷⣄⠀⠀⠘⣸⡇⠀⠄⠂⠀⠀⠀⠀⠐⠠⢀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠔⠊⠁⠀⠀⠀⠀⠀⠀⣀⣠⠤⠖⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢷⣜⠿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠄⠘
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣨⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣇⠀⠀⠀⠀⠀⠀⠰⠀⠀⠀⠀⠀`}</pre>`,
    description: document.getElementById("description-v").innerHTML
  },
  'w': {
    Alphabet:
    `<pre>${`⠀⠀⠀⠀⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣤⣤⣤⣶⣶⣾⣿⣿⣿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠷⠾⠿⠶⠶⠶⠿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣴⡶⠿⠟⠛⠛⠛⠻⠭⠭⠤⠤⠤⠒⠒⠛⠛⠉⢉⣉⣉⣉⡉⠉⠉⠓⠲⠤⣄⡀⠀⠀⠀⠀⠀⠈⠻⢿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢀⣴⡾⠟⠉⠁⠔⠊⠛⠓⠒⠒⠢⠤⠤⠤⠶⠶⠖⠒⠛⠉⠉⠉⠉⢉⣉⣉⠉⠙⠓⠲⢤⣄⡉⠲⢤⡀⠀⠀⠀⠀⠈⢻⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣾⡿⠋⠀⠀⠀⠀⣀⡤⠔⠒⠒⠒⠒⠲⠦⠤⠀⠀⠀⠀⠀⠀⠀⣠⠂⠀⠀⠀⠈⠉⠉⠓⠒⠤⣍⠳⢤⡈⠒⢄⡀⠀⠀⠀⢻⣿⡀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢠⣿⠀⠀⠀⠀⠀⡐⠁⠀⠀⠀⠀⠀⠀⠀⠢⡀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢆⠙⠢⡀⠀⠀⠀⠀⠀⢻⣷⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢀⣾⡟⠀⠀⠀⠀⠀⠁⠀⢀⣀⣀⣀⣀⠂⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣶⠿⢿⣿⣿⣿⣿⣶⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣷⡄⠀⠀⠀⠀⠀
⠀⢀⣴⡿⠋⣀⣀⣀⠀⠤⢄⢠⣾⣿⣿⣿⣿⣿⣿⣷⣦⡀⠀⡀⠀⠀⠀⠀⣴⣿⠏⠉⣀⣠⣼⣿⣿⣿⣿⣿⣭⣿⣧⠀⢠⣤⡄⠀⠀⢀⣴⣶⣢⡿⢿⣶⣄⠀⠀⠀
⢠⣿⠟⡡⠚⣉⠄⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠛⠛⠻⢿⣿⠿⠛⠀⠀⠀⠀⠻⢿⣶⡾⠟⠛⠉⠉⢠⣄⡀⠉⠉⠉⠉⠀⠃⣀⣤⣤⣶⣶⣤⣤⡀⠈⠙⠪⠻⣷⡄⠀
⣿⡿⡸⠁⡏⢠⣶⣾⣿⣶⣶⣤⡀⢀⣀⡀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠈⠻⢿⣶⣤⣤⣤⣶⣾⠿⠟⠉⣴⠀⠀⠉⠻⣷⡀⠀⢁⠘⣿⡆
⣿⡇⡇⠀⡇⠈⠀⠀⢠⣆⠈⠿⠿⠿⠟⠀⠀⠀⢀⣴⡿⠟⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣿⣧⣀⠀⠀⢹⣿⠀⢸⠀⢸⣿
⠘⣿⣧⠀⠳⠄⠀⠀⣾⣿⠀⠀⠀⠀⠀⢀⣠⣾⣿⠋⠀⠀⠀⠀⠀⠀⣀⣀⣈⡙⠛⢻⣧⠓⠲⠖⠒⠢⠀⠀⢀⣀⣤⣶⣾⠟⠋⠉⢹⣿⠿⣷⡆⣸⡿⠀⡘⠀⢸⣿
⠀⠙⣿⡝⠒⢤⠀⣼⣿⣿⣤⡀⠀⠤⠚⠉⠘⠋⠛⣷⣄⠀⠀⡀⠀⠚⠿⠟⠛⠟⢠⣿⠇⠀⠀⣀⣠⣴⣶⣿⡿⢿⣿⠉⠀⠀⢀⣠⣿⡏⠀⠀⠀⡿⠁⢠⠇⢠⣿⠇
⠀⠀⢹⣿⡄⠀⢀⣿⣿⡿⢻⣿⣷⣦⣄⣀⡀⠀⠀⠈⠛⢿⠿⠃⠀⠀⠀⣀⣀⣠⣤⣴⣶⣾⠿⠟⠛⠉⠁⠀⢀⣾⣿⣤⣶⣾⣿⣿⠟⠁⠀⠀⠀⠤⠒⢉⣴⡿⠋⠀
⠀⠀⠀⣿⣇⠀⢸⣿⣿⡇⣼⡟⠈⠙⣿⡟⠿⠿⣿⣶⣶⣶⣶⠾⠿⣿⡿⠟⠛⠛⠋⠉⠹⣿⡄⠀⣀⣠⣤⣶⣿⣿⣿⠟⠉⣰⣿⠋⠀⠀⠀⠀⠀⢐⣾⡿⠋⠀⠀⠀
⠀⠀⠀⢹⣿⠀⢸⣿⣿⣷⣿⣿⣀⣸⣿⣁⣀⠀⠀⢸⣿⠁⠀⠀⠀⣿⡇⠀⠀⢀⣀⣀⣤⣿⣿⣿⣿⣿⠿⠛⠉⢿⣇⣀⣴⡿⠁⠀⠀⠀⠀⠀⢠⣿⠟⠀⠀⠀⠀⠀
⠀⠀⠀⢸⣿⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢿⣿⠋⠉⠀⠀⠀⠀⢘⣿⣿⠏⠀⠀⠀⠀⠀⠀⠀⣼⡏⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢸⡏⠀⠀⢹⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⢿⡿⠛⠉⠁⠀⠀⠈⢿⣧⠀⠀⢀⣠⣾⡿⠛⠁⠀⠀⠀⠀⠀⠀⢀⣼⡟⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⣿⡇⠀⠀⠈⢿⣧⣿⡇⢹⣿⡄⠹⣿⡄⠀⠈⢿⣇⠀⠀⠀⠀⢸⣷⠀⠀⠀⠀⠀⠀⢈⣿⣷⣾⡿⠟⠉⠀⠀⡀⠀⠀⢀⠀⢀⣴⡿⢋⠔⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠀⣿⡇⠀⠀⠀⠈⠻⠿⣷⣶⣿⣷⣤⣿⣿⣄⣀⣘⣿⣀⣀⣀⣀⣸⣿⣤⣤⣤⣶⣶⣿⠿⠟⠋⠁⣀⡤⠖⢋⣩⡴⠞⢉⣤⣾⡿⢋⠠⠂⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢰⣿⠀⠀⢀⠀⠀⠠⡀⠀⠈⠉⠉⠙⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠋⠉⠉⠁⠀⣀⡤⠖⢋⣡⡴⠞⠋⣡⣤⣾⡿⠛⠁⢀⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢸⣿⠀⠀⠸⡀⠀⠀⠙⠶⣤⣀⣀⠀⠀⠈⠉⠉⠉⠉⠉⠉⢉⠉⣁⣀⣀⡀⠤⠖⣚⣩⠥⠖⠛⠉⣁⣤⣶⠿⠛⠉⠀⢃⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢸⣿⠀⠀⠀⠉⠲⢤⣄⣀⡀⠀⠈⠉⠉⠉⠀⠀⠀⣀⣉⣁⣀⡭⠭⠤⠒⠒⠋⠉⠁⢀⣠⣴⣶⠿⠛⠉⠀⠀⠀⠀⠀⠀⡂⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠈⢿⣆⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⣀⣤⣶⠿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠨⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠈⠻⣷⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣤⣴⣾⣿⡿⠿⠟⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡂⠀⠑⠦⠤⠤⠤⠄⠤⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠈⠙⠻⠿⢿⢶⣶⣶⣶⣶⣶⣶⢾⠿⠿⠛⠛⠋⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀`}</pre>`,
    description: document.getElementById("description-w").innerHTML
  },
  'x': {
    Alphabet:
    `<pre>${`⠤⣤⣤⣤⣄⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣠⣤⠤⠤⠴⠶⠶⠶⠶
⢠⣤⣤⡄⣤⣤⣤⠄⣀⠉⣉⣙⠒⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠘⣉⢡⣤⡤⠐⣶⡆⢶⠀⣶⣶⡦
⣄⢻⣿⣧⠻⠇⠋⠀⠋⠀⢘⣿⢳⣦⣌⠳⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠞⣡⣴⣧⠻⣄⢸⣿⣿⡟⢁⡻⣸⣿⡿⠁
⠈⠃⠙⢿⣧⣙⠶⣿⣿⡷⢘⣡⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣿⣿⣿⣷⣝⡳⠶⠶⠾⣛⣵⡿⠋⠀⠀
⠀⠀⠀⠀⠉⠻⣿⣶⠂⠘⠛⠛⠛⢛⡛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠛⠀⠉⠒⠛⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⢸⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⣾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢻⡁⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠘⡇⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀ ⠀⠀⠀⠿`}</pre>`,
    description: document.getElementById("description-x").innerHTML
  },
  'y': {
    Alphabet:
    `<pre>${`⠤⣤⣤⣤⣄⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣠⣤⠤⠤⠴⠶⠶⠶⠶
⢠⣤⣤⡄⣤⣤⣤⠄⣀⠉⣉⣙⠒⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠘⣉⢡⣤⡤⠐⣶⡆⢶⠀⣶⣶⡦
⣄⢻⣿⣧⠻⠇⠋⠀⠋⠀⢘⣿⢳⣦⣌⠳⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠞⣡⣴⣧⠻⣄⢸⣿⣿⡟⢁⡻⣸⣿⡿⠁
⠈⠃⠙⢿⣧⣙⠶⣿⣿⡷⢘⣡⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣿⣿⣿⣷⣝⡳⠶⠶⠾⣛⣵⡿⠋⠀⠀
⠀⠀⠀⠀⠉⠻⣿⣶⠂⠘⠛⠛⠛⢛⡛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠛⠀⠉⠒⠛⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⢸⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⣾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢻⡁⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠘⡇⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀ ⠀⠀⠀⠿`}</pre>`,
    description: document.getElementById("description-y").innerHTML
  },
  'z': {
    Alphabet:
    `<pre>${`⠀⠀⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣶⣾⣿⣿⣿⣿⣿⣿⣶⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠢⣄⡀⠀⠀⠀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣄⡀⠀⠀⢀⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠉⠲⢦⣀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠈⠓⠦⡜⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣀⣀⣀⣀⣀⣤⣤⣄⣈⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⢸⣿⣿⣿⣿⣿⡟⠁⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⠀⣰⣾⣿⣿⣿⣿⣿⠁⠀⠀⠀⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠙⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⢠⣿⡿⢿⣿⣿⣿⣿⣄⠀⠀⠀⠀⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⣁⢤⡈⠻⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠸⣿⣿⣿⠉⢻⣧⡀⠀⠀⠀⢻⣿⣿⣿⣿⡟⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⣀⣀⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠞⢁⣀⣻⡀⠘⢿⣿⣿⡇⠀⠻⣿⡇⠀⠀⠀⠀⠀⣿⣿⠗⠶⢤⡹⣷⡀⠀⠀⠈⣿⣿⣿⣿⡇⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⣈⡉⠉⡇⠀⠈⣿⣿⠀⠀⠀⠈⠃⠀⠀⠀⠀⠀⠹⣿⠀⠀⠀⢱⠹⣷⠀⠀⠀⢹⣿⣿⣿⡇⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⡞⢁⡙⣿⡇⠀⠀⠈⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠀⠀⠀⠈⡇⠹⡇⠀⠀⠈⣿⣿⣿⠇⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠉⠙⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⢰⠇⣄⣉⠉⠀⠀⠀⠀⠈⠀⠀⢀⡀⠀⠀⠀⠀⠀⣠⣶⣶⠀⠀⠀⠀⣿⠀⠻⠆⠀⠀⢸⣿⠟⢀⣀⣀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠈⠙⠻⢿⣿⣿⣿⣿⣿⣿⡄⠀⢸⣀⡀⣸⠏⠀⠀⠀⠀⠀⠀⠀⠀⠙⠓⠦⣄⡀⠀⣿⣿⣿⠀⠀⠀⢠⡿⠀⠀⠀⠀⠀⣼⣿⡾⠟⠻⢿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⣿⣿⣿⣷⣄⠀⢩⣿⣷⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠳⣤⣭⡉⠀⡀⠀⡼⠀⠀⠀⠀⠀⠀⠉⠓⠋⢻⠀⠘⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢉⡿⠃⠙⢦⡀⠙⠻⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⠷⣬⠛⠃⠀⠀⠀⠀⢀⣄⠀⠀⠀⡏⣠⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⠋⠀⠀⠀⠀⠙⢦⣀⡻⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣿⠏⠀⠀⣼⠁⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡾⠁⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡛⠛⣀⠀⣰⠃⢰⣾⣿⣿⣿⣿⣿⡉⠉⠉⠉⠙⠛
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⠏⠀⠀⠀⠀⠀⠀⠀⠀⢳⡀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠋⠙⢧⡀⠀⠀⠀⠀⠀⠀⠈⢯⠛⢿⡻⠃⣰⣿⣿⣿⣿⣿⣿⣿⣿⣦⡀⠀⠀⠀
⠀⠀⢀⡤⣄⣴⣶⣶⣾⣏⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢷⠘⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡏⠳⣄⠀⠙⢦⡀⠀⠘⣟⠶⢤⠈⣳⡀⠉⢲⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀
⠀⣠⠋⠀⠈⠈⠉⠛⠻⣿⣿⣿⣶⣤⣀⠀⠀⠀⠀⠀⠀⢷⠘⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣄⡀⠙⠢⢤⡉⠳⣄⡈⠉⠙⠋⠉⠀⢠⡟⠀⠀⠉⠙⠛⠛⠿⢿⣿⣿⣿⣿⣆⠀
⡽⠁⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠻⠿⣿⣿⣶⣤⣀⠀⠀⠈⢧⠈⢻⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠶⢄⣀⠙⢲⣼⠿⠀⠀⠀⠀⢠⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠙⠿⣿⡇
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠻⢿⣿⣦⣄⠘⢧⠀⠙⣧⡀⠀⠀⠀⠀⠀⠀⠀⠒⢤⣄⡀⠈⠛⠛⠁⠀⠀⠀⢀⡴⠋⠀⠀⠀⢰⡏⠉⠻⣦⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⢿⣾⣦⡀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⠴⠞⠉⠀⠀⠀⠀⠀⣼⠁⠀⠀⠘⣇⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⣶⣄⡈⠻⢦⡀⠀⠀⠀⠀⢀⣀⣤⠴⠖⠊⠉⠀⠀⠀⠀⠀⠀⠀⠀⢀⡇⠀⠀⠀⠀⣽⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⡄⣀⣠⠤⠤⠤⠤⢤⣀⣀⣀⠈⠛⢦⣄⡽⠳⠖⠚⠛⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡿⠀⠘⢷⡀⣰⡏⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡤⣶⡿⣻⡭⠓⠋⠉⠀⠀⠀⠀⠀⠀⠀⠈⠉⠙⠒⠲⢬⣽⣶⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⠋⠀⠀⠀⠈⢻⠋⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠉⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠢⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠃⠀⠀⠀⠀⠀⣾⣄⣀⣀⣠⣤⣤⠄⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣠⣤⣶⣶⣶⣶⣶⣿⣏⠉⠛⠲⠮⣝⡶⣄⡀⠀⠀⠀⠀⠀⠀⠀⣼⠇⠀⠲⣲⣶⡆⠀⣿⡽⠟⠶⠛⠉⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣤⡀⠀⠙⠻⢿⣄⠀⠀⠀⠀⢀⡼⠃⠀⠀⠀⠀⠀⠀⠀⣟⡇⠘⣿⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡀⠀⠀⢻⠀⠀⠀⢀⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⢻⠷⣄⣻⣀⣀⣀⠀⠀⠆
⠀⠀⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠸⣧⣤⣤⡟⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡴⠀⠀⣤⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣧⡀⠀⣿⠇⠀⠀⠀⠀
⠀⠀⠀⠀⢸⠀⠀⠀⠀⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⢿⣿⠀⣧⠀⠀⠀⠀⠀⠀⠀⢀⣼⣷⠈⣝⠳⠭⠤⠤⠖⠒⠈
⠀⠀⠀⠀⠘⠀⠀⠀⣠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣼⣿⠐⣞⢧⡀⠀⠀⢀⡀⣤⢟⣹⢷⡸⠏⠀⠀⠀⣀⢀⠀⠀`}</pre>`,
    description: document.getElementById("description-z").innerHTML
  },
  
}

    // 키 입력 처리 함수
  function handleKeyPress(event) {
    const key = event.key;

    if (key === "Enter") {
      processCommand(currentInput);  // 명령 처리
      logKeyPress(currentInput);     // 로그 기록
      currentInput = "";  // 입력 초기화
    } else if (key === "Backspace") {
      currentInput = currentInput.slice(0, -1);  // 마지막 문자 삭제
    } else if (key.length === 1) {
      currentInput += key;  // 새 문자 추가
    }

    renderInput();  // 입력된 내용을 화면에 렌더링
  }

  // 명령어 처리 함수
  function processCommand(input) {
    const lowerInput = input.toLowerCase();
    const data = primerData[lowerInput];
    const message = `<br><br>${input}가 입력되었습니다.<br>`;
    dosContent.insertAdjacentHTML('beforeend', message);

    // 구분선 및 줄바꿈 추가
    // dosContent.insertAdjacentHTML('beforeend', `\n`);

    if (lowerInput === 'clear') {
      location.reload();  // 페이지 새로고침
      return;  // 실행 중지
    }
    

    if (data) {
      dosContent.insertAdjacentHTML('beforeend', `<div>${data.Alphabet}</div><div>${data.description}</div>`);
      
      

      if (lowerInput === 'a') {
        if (audio) {
            audio.pause();
            audio.currentTime = 0;
        }
        setTimeout(() => {
          scrollToBottom(); 
      }, 50); 
        setupAudioVisualization();  // 오디오 시각화 실행
    } else if (lowerInput === 'g') {
        resetGeolocation();  // 위치 정보 가져오기 실행
    } else if (lowerInput === 'c') {
        startAsciiCamera();  // 아스키 카메라 실행
    } else if (lowerInput === 'd') {
        darkmode();
    } else if (lowerInput === 'e') {
        // 필요한 기능 추가
    } else if (lowerInput === 'f') {
        toggleFullscreen();
    } else if (lowerInput === 'h') {
        // 필요한 기능 추가
    } else if (lowerInput === 'k') {
        const spriteElement = document.getElementById('description-k');
        spriteElement.style.display = 'inline-block'; // 스프라이트 표시
        dosContent.appendChild(spriteElement); // dosContent에 추가
    } else if (lowerInput === 'm') {
        // 필요한 기능 추가
    } else if (lowerInput === 'o') {
    } else if (lowerInput === 'p') {
        // 필요한 기능 추가
    } else if (lowerInput === 'r') {
        randomTextShuffle(); // 랜덤 문자열 섞기 함수 호출
    } else if (lowerInput === 'v') {
        toggleVisibility(); // visibility 함수 호출
    } else if (lowerInput === 't') {
        // 필요한 기능 추가
    } else if (lowerInput === 'w') {
      handleAlert();
    } else if (lowerInput === 'b') {
    } else if (lowerInput === 'i') {
    } else if (lowerInput === 'j') {
    } else if (lowerInput === 'l') {
    } else if (lowerInput === 'n') {
    } else if (lowerInput === 'q') {
    } else if (lowerInput === 's') {
    } else if (lowerInput === 'u') {
    } else if (lowerInput === 'x') {
      handleXCommand();
    } else if (lowerInput === 'y') {
      handleYCommand();
    } else if (lowerInput === 'z') {
      startCountdown();
    } else if (lowerInput === '/help'){

    }
    else {
        dosContent.insertAdjacentHTML('beforeend', `<div>알 수 없는 명령어: ${input}</div>`);
    }
  }

    // 구분선 및 줄바꿈
    dosContent.insertAdjacentHTML('beforeend', `<pre>==================================================================================</pre>`);

    resetInputField();  // 입력 필드를 초기화 후 하단으로 이동
  }

  // 입력 필드를 초기화하고 하단으로 이동하는 함수
  function resetInputField() {
    // 기존 입력 필드를 제거
    const inputWrapper = document.getElementById("input-wrapper");
    if (inputWrapper) {
      inputWrapper.remove();
    }

    // 새로운 입력 필드를 하단에 생성
    const newInputWrapper = document.createElement("span");
    newInputWrapper.id = "input-wrapper";
    dosContent.appendChild(newInputWrapper);

    renderInput();  // 새로운 입력 필드에 커서와 입력 내용 렌더링
  }


  // 입력 내용 렌더링 함수
  function renderInput() {
    let inputWrapper = document.getElementById("input-wrapper");

    // input-wrapper가 없을 때 새로 생성
    if (!inputWrapper) {
      inputWrapper = document.createElement("span");
      inputWrapper.id = "input-wrapper";
      dosContent.appendChild(inputWrapper);  // dosContent 하단에 추가
    }

    // 현재 입력된 내용과 깜박이는 커서 표시
    inputWrapper.innerHTML = `${currentInput}<span class="blinking">|</span>`;
    scrollToBottom();  // 스크롤 하단 이동
  }

  function clearScreen() {
    dosContent.innerHTML = '';  // 출력 내용 초기화
    currentInput = '';  // 현재 입력 초기화
    lineIndex = 0;  // 타이핑 애니메이션 인덱스 초기화
    typeLine();  // 타이핑 애니메이션 다시 시작
    scrollToTop();  // 스크롤 상단으로 이동
  }


  // 스크롤을 하단으로 이동하는 함수
  function scrollToBottom() {
    setTimeout(() => {
      dosContent.scrollTop = dosContent.scrollHeight;
    }, 0);
  }

  // 커서 깜박임 애니메이션을 위한 CSS 추가
  const style = document.createElement('style');
  style.innerHTML = `
    .blinking {
      animation: blink 1s step-end infinite;
    }
    @keyframes blink {
      50% { opacity: 0; }
    }
  `;
  document.head.appendChild(style);
  

  // 페이지 로딩 시 타이핑 시작
  typeLine();
});










